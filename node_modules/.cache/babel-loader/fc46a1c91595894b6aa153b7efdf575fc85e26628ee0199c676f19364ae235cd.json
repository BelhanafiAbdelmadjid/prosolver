{"ast":null,"code":"import _defineProperty from \"/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport router from \"@/main.js\";\nexport default class apiFetch {\n  static get(endpoint, emit) {\n    return new Promise(resolve => {\n      fetch(this.BASE_URL + endpoint, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status == 401) {\n          router.push('/login');\n        }\n        response.json().then(data => {\n          if (emit) {\n            this.emitter.emit(\"sidebar-error\", {\n              error: response.ok,\n              description: data.msg\n            });\n          }\n          resolve(data);\n        });\n      });\n    });\n  }\n  static post(endpoint, payload, emit) {\n    return new Promise((resolve, reject) => {\n      fetch(this.BASE_URL + endpoint, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...payload\n        })\n      }).then(response => {\n        response.json().then(data => {\n          if (response.ok) {\n            resolve(data);\n          } else {\n            reject(data);\n          }\n          if (emit) {\n            this.emitter.emit(\"sidebar-error\", {\n              error: response.ok,\n              description: data.msg\n            });\n          }\n        });\n      });\n    });\n  }\n}\n_defineProperty(apiFetch, \"BASE_URL\", \"http://localhost:5000/api\");","map":{"version":3,"names":["router","apiFetch","get","endpoint","emit","Promise","resolve","fetch","BASE_URL","method","credentials","headers","then","response","status","push","json","data","emitter","error","ok","description","msg","post","payload","reject","body","JSON","stringify","_defineProperty"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/common/api.service.js"],"sourcesContent":["import router from \"@/main.js\"\nexport default class apiFetch{\n    static BASE_URL = \"http://localhost:5000/api\";\n\n\n    static get(endpoint,emit){\n        return new Promise((resolve)=>{\n            fetch(this.BASE_URL+endpoint,{\n                method: \"GET\",\n                credentials: \"include\", \n                headers: {\n                    \"Content-Type\": \"application/json\",\n                }\n            })\n            .then((response)=>{\n                if(response.status == 401){\n                    router.push('/login')\n                }\n                response.json()\n                .then((data)=>{\n                    if(emit){\n                        this.emitter.emit(\"sidebar-error\",{\n                            error : response.ok,\n                            description : data.msg\n                        })\n                    }\n                    resolve(data);\n                })\n                \n            })\n        })\n    }\n\n    static post(endpoint,payload,emit){\n        return new Promise((resolve,reject)=>{\n            fetch(this.BASE_URL+endpoint,{\n                method: \"POST\",\n                credentials: \"include\", \n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body : JSON.stringify({ \n                    ...payload\n                  })\n            })\n            .then((response)=>{\n                response.json()\n                .then((data)=>{\n                    if(response.ok){\n\n                        resolve(data);\n                    }else{\n                        reject(data);\n                    }\n                    if(emit){\n                        this.emitter.emit(\"sidebar-error\",{\n                            error : response.ok,\n                            description : data.msg\n                        })\n                    }\n                })\n                \n            })\n        })\n\n    }\n}\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,WAAW;AAC9B,eAAe,MAAMC,QAAQ;EAIzB,OAAOC,GAAGA,CAACC,QAAQ,EAACC,IAAI,EAAC;IACrB,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAG;MAC1BC,KAAK,CAAC,IAAI,CAACC,QAAQ,GAACL,QAAQ,EAAC;QACzBM,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAG;QACd,IAAGA,QAAQ,CAACC,MAAM,IAAI,GAAG,EAAC;UACtBd,MAAM,CAACe,IAAI,CAAC,QAAQ,CAAC;QACzB;QACAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CACdJ,IAAI,CAAEK,IAAI,IAAG;UACV,IAAGb,IAAI,EAAC;YACJ,IAAI,CAACc,OAAO,CAACd,IAAI,CAAC,eAAe,EAAC;cAC9Be,KAAK,EAAGN,QAAQ,CAACO,EAAE;cACnBC,WAAW,EAAGJ,IAAI,CAACK;YACvB,CAAC,CAAC;UACN;UACAhB,OAAO,CAACW,IAAI,CAAC;QACjB,CAAC,CAAC;MAEN,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAEA,OAAOM,IAAIA,CAACpB,QAAQ,EAACqB,OAAO,EAACpB,IAAI,EAAC;IAC9B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAACmB,MAAM,KAAG;MACjClB,KAAK,CAAC,IAAI,CAACC,QAAQ,GAACL,QAAQ,EAAC;QACzBM,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDe,IAAI,EAAGC,IAAI,CAACC,SAAS,CAAC;UAClB,GAAGJ;QACL,CAAC;MACP,CAAC,CAAC,CACDZ,IAAI,CAAEC,QAAQ,IAAG;QACdA,QAAQ,CAACG,IAAI,CAAC,CAAC,CACdJ,IAAI,CAAEK,IAAI,IAAG;UACV,IAAGJ,QAAQ,CAACO,EAAE,EAAC;YAEXd,OAAO,CAACW,IAAI,CAAC;UACjB,CAAC,MAAI;YACDQ,MAAM,CAACR,IAAI,CAAC;UAChB;UACA,IAAGb,IAAI,EAAC;YACJ,IAAI,CAACc,OAAO,CAACd,IAAI,CAAC,eAAe,EAAC;cAC9Be,KAAK,EAAGN,QAAQ,CAACO,EAAE;cACnBC,WAAW,EAAGJ,IAAI,CAACK;YACvB,CAAC,CAAC;UACN;QACJ,CAAC,CAAC;MAEN,CAAC,CAAC;IACN,CAAC,CAAC;EAEN;AACJ;AAACO,eAAA,CAjEoB5B,QAAQ,cACP,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}