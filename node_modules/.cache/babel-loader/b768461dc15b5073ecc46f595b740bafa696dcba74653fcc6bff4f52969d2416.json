{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, renderSlot as _renderSlot, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1c711979\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"holders hoder-supervision\"\n};\nconst _hoisted_2 = {\n  class: \"Welcomeback colorfull-gradient-1\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"How things are going today?\", -1 /* HOISTED */));\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  class: \"server-name\"\n};\nconst _hoisted_6 = {\n  class: \"holder-status\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_queryNavbar = _resolveComponent(\"queryNavbar\");\n  const _component_tableExtension = _resolveComponent(\"tableExtension\");\n  const _component_popupDisplay = _resolveComponent(\"popupDisplay\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", null, \"Welcome back, \" + _toDisplayString($data.AuthStore.username) + \"!ðŸ‘‹\", 1 /* TEXT */), _hoisted_3]), _createVNode(_component_queryNavbar, {\n    onInputChanged: $options.onInputChanged,\n    theme: 'white'\n  }, {\n    Title: _withCtx(() => [_createTextVNode(\" Servers \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onInputChanged\"]), _createVNode(_component_tableExtension, null, {\n    tableRows: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.servers, server => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: server.id,\n        onClick: $event => $options.displayContainersOf(server)\n      }, [_createElementVNode(\"td\", _hoisted_5, _toDisplayString(server.name), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"p\", null, _toDisplayString(server.ip), 1 /* TEXT */)]), _createElementVNode(\"td\", null, [_createElementVNode(\"p\", _hoisted_6, [_createElementVNode(\"span\", {\n        class: _normalizeClass([{\n          'status-dot-active': server.status == 'Active',\n          'status-dot-down': server.status == 'Down'\n        }, \"status-dot\"])\n      }, null, 2 /* CLASS */), _createElementVNode(\"span\", null, _toDisplayString(server.status), 1 /* TEXT */)])])], 8 /* PROPS */, _hoisted_4);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }), $data.displayContainersOnPopUp ? (_openBlock(), _createBlock(_component_popupDisplay, {\n    key: 0,\n    onClosePopup: _cache[0] || (_cache[0] = $event => {\n      $data.displayContainersOnPopUp = false;\n      $data.containersPopUpDisplay = [];\n    })\n  }, {\n    default: _withCtx(() => [_renderSlot(_ctx.$slots, \"default\", {}, () => [_createTextVNode(\" Containers should be displayed here using tableExtension \")], true)]),\n    _: 3 /* FORWARDED */\n  })) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$data","AuthStore","username","_hoisted_3","_createVNode","_component_queryNavbar","onInputChanged","$options","theme","Title","_withCtx","_createTextVNode","_","_component_tableExtension","tableRows","_Fragment","_renderList","servers","server","key","id","onClick","$event","displayContainersOf","_hoisted_5","name","ip","_hoisted_6","_normalizeClass","status","_hoisted_4","displayContainersOnPopUp","_createBlock","_component_popupDisplay","onClosePopup","_cache","containersPopUpDisplay","default","_renderSlot","_ctx","$slots","_createCommentVNode"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/supervision.vue"],"sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                                  JSON DATA                                 */\n/* -------------------------------------------------------------------------- */\n/*  \n\nservers : Array\n[\n{\n    id : X , name : \"test\" , ip : \"@ip\" , status : \"Active/Down\"\n}\n]\n\n/* -------------------------------------------------------------------------- */\n/*                                    TO DO                                   */\n/* -------------------------------------------------------------------------- */\n\nMethods : getServers , getServersWithNameLike\n\n*/\n<template>\n  <div class=\"holders hoder-supervision\">\n    <div class=\"Welcomeback colorfull-gradient-1\">\n      <h1>Welcome back, {{AuthStore.username}}!ðŸ‘‹</h1>\n      <p>How things are going today?</p>\n    </div>\n    <queryNavbar @input-changed=\"onInputChanged\" :theme=\"'white'\">\n      <template #Title>\n        Servers\n      </template>\n    </queryNavbar>\n    <tableExtension  >\n      <template #tableRows>\n        <tr \n          v-for=\"server in servers\" \n          :key=\"server.id\"\n          @click=\"displayContainersOf(server)\">\n          <td class=\"server-name\">{{ server.name }}</td>\n          <td>\n            <p>{{ server.ip }}</p>\n          </td>\n          <td>\n            <p class=\"holder-status\">\n              <span\n                :class=\"{ 'status-dot-active' : server.status == 'Active','status-dot-down' : server.status == 'Down'  }\"\n                class=\"status-dot\"></span>\n              <span>{{ server.status }}</span>\n            </p>\n          </td>\n        </tr>\n      </template>\n    </tableExtension>\n\n    <popupDisplay \n      v-if=\"displayContainersOnPopUp\"\n      @close-popup=\"displayContainersOnPopUp=false;containersPopUpDisplay=[]\"\n    >\n      <slot>\n        Containers should be displayed here using tableExtension\n      </slot>\n    </popupDisplay>\n  </div>\n</template>\n<script>\nimport { UseAuthStore } from \"@/store/store.js\"\n\nimport popupDisplay from \"@/components/interraction/popups/popup-display.vue\"\nimport queryNavbar from \"@/components/interraction/query/query-navbar.vue\"\nimport tableExtension from \"@/components/interraction/tables/table-withextension.vue\"\nexport default{\n    name : 'supervision-view',\n    data(){\n        return{\n          AuthStore : UseAuthStore(),\n          servers : [],\n          displayContainersOnPopUp : false,\n          containersPopUpDisplay : []\n        } \n    },\n    components : {\n      queryNavbar,\n      tableExtension,\n      popupDisplay\n    },\n    methods : {\n      getServers(){\n            this.servers = [\n                {\n                    id : 5,\n                    name : \"Onboarding01-uat\",\n                    ip : \"192.168.1.104\",\n                    status : 'Active'\n                },\n                {\n                    id : 15,\n                    name : \"Onboarding02-uat\",\n                    ip : \"192.168.1.107\",\n                    status : 'Down'\n                },\n            ]\n      },\n      onInputChanged(inputValue){\n        this.getServersWithNameLike(inputValue)\n      },\n      getServersWithNameLike(NameLike){\n        console.log(NameLike)\n        //fetch here after\n      },\n      displayContainersOf(server){\n        //fetch for containers here \n        console.log(\"fetching...\",server)\n        //then assigne to containersPopUpDisplay\n        this.displayContainersOnPopUp = true;\n        this.containersPopUpDisplay = [\n          {\n            name : 'compasionate',\n            id : \"f081dsq5465\",\n            ports : \"8080\",\n            status : \"up 3 weeks\"\n          }\n        ]\n      }\n    },\n    beforeMount(){\n        this.getServers();\n    }\n}\n</script>\n<style scoped>\n\n.hoder-supervision{\n  height: 100%;\n  width: 100%;\n\n  display: grid;\n  grid-template-rows: 120px  50px  1fr;\n}\n.Welcomeback{\n  height: auto;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  gap : 5px;\n  padding : var(--medieum-padding);\n  box-sizing: border-box;\n  border-radius: var(--medieum-border-radius);\n\n\n\n  color:white;\n}\n\n\n</style>"],"mappings":";;;EAoBOA,KAAK,EAAC;AAA2B;;EAC/BA,KAAK,EAAC;AAAkC;gEAE3CC,mBAAA,CAAkC,WAA/B,6BAA2B;mBAvBpC;;EAoCcD,KAAK,EAAC;AAAa;;EAKlBA,KAAK,EAAC;AAAe;;;;;uBArBlCE,mBAAA,CAwCM,OAxCNC,UAwCM,GAvCJF,mBAAA,CAGM,OAHNG,UAGM,GAFJH,mBAAA,CAAgD,YAA5C,gBAAc,GAAAI,gBAAA,CAAEC,KAAA,CAAAC,SAAS,CAACC,QAAQ,IAAE,KAAG,iBAC3CC,UAAkC,C,GAEpCC,YAAA,CAIcC,sBAAA;IAJAC,cAAa,EAAEC,QAAA,CAAAD,cAAc;IAAGE,KAAK,EAAE;;IACxCC,KAAK,EAAAC,QAAA,CAAC,MAEjB,CA5BNC,gBAAA,CA0BuB,WAEjB,E;IA5BNC,CAAA;yCA8BIR,YAAA,CAoBiBS,yBAAA;IAnBJC,SAAS,EAAAJ,QAAA,CAEhB,MAAyB,E,kBAD3Bd,mBAAA,CAgBKmB,SAAA,QAhDbC,WAAA,CAiC2BhB,KAAA,CAAAiB,OAAO,EAAjBC,MAAM;2BADftB,mBAAA,CAgBK;QAdFuB,GAAG,EAAED,MAAM,CAACE,EAAE;QACdC,OAAK,EAAAC,MAAA,IAAEf,QAAA,CAAAgB,mBAAmB,CAACL,MAAM;UAClCvB,mBAAA,CAA8C,MAA9C6B,UAA8C,EAAAzB,gBAAA,CAAnBmB,MAAM,CAACO,IAAI,kBACtC9B,mBAAA,CAEK,aADHA,mBAAA,CAAsB,WAAAI,gBAAA,CAAhBmB,MAAM,CAACQ,EAAE,iB,GAEjB/B,mBAAA,CAOK,aANHA,mBAAA,CAKI,KALJgC,UAKI,GAJFhC,mBAAA,CAE4B;QADzBD,KAAK,EA3CtBkC,eAAA;UAAA,qBA2CgDV,MAAM,CAACW,MAAM;UAAA,mBAAiCX,MAAM,CAACW,MAAM;QAAA,GACrF,YAAY;+BACpBlC,mBAAA,CAAgC,cAAAI,gBAAA,CAAvBmB,MAAM,CAACW,MAAM,iB,qBA7CpCC,UAAA;;IAAAlB,CAAA;MAqDYZ,KAAA,CAAA+B,wBAAwB,I,cADhCC,YAAA,CAOeC,uBAAA;IA3DnBd,GAAA;IAsDOe,YAAW,EAAAC,MAAA,QAAAA,MAAA,MAAAb,MAAA;MAAEtB,KAAA,CAAA+B,wBAAwB;MAAO/B,KAAA,CAAAoC,sBAAsB;IAAA;;IAtDzEC,OAAA,EAAA3B,QAAA,CAwDM,MAEO,CAFP4B,WAAA,CAEOC,IAAA,CAAAC,MAAA,iBAFP,MAEO,CA1Db7B,gBAAA,CAwDY,4DAEN,E;IA1DNC,CAAA;QAAA6B,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}