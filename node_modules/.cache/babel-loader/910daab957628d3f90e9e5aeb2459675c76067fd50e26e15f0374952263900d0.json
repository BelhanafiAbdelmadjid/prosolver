{"ast":null,"code":"import { createTextVNode as _createTextVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-25bb5516\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"UAT\"\n}, \"UAT\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Prod\"\n}, \"Prod\", -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_1, _hoisted_2];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, \"Name\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, \"Added by\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, \"Actions\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"server-name\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Actions\")], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_tableExtension = _resolveComponent(\"tableExtension\");\n  const _component_buttonValidation = _resolveComponent(\"buttonValidation\");\n  const _component_interractionLayout = _resolveComponent(\"interractionLayout\");\n  return _openBlock(), _createBlock(_component_interractionLayout, {\n    forbiddenContainers: true\n  }, {\n    Header: _withCtx(() => [_createTextVNode(\" Creating a new server \")]),\n    InputName: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      placeholder: \"Server name...\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.server.name = $event)\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.server.name]])]),\n    InputIp: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      placeholder: \"Server ip address...\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.server.ip = $event)\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.server.ip]])]),\n    InputType: _withCtx(() => [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.server.type = $event),\n      name: \"\",\n      id: \"\"\n    }, [..._hoisted_3], 512 /* NEED_PATCH */), [[_vModelSelect, $data.server.type]])]),\n    Containers: _withCtx(() => [_createVNode(_component_tableExtension, null, {\n      tableHeaders: _withCtx(() => [_hoisted_4, _hoisted_5, _hoisted_6]),\n      tableRows: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.server.containers, (container, index) => {\n        return _openBlock(), _createElementBlock(\"tr\", {\n          key: index\n        }, [_createElementVNode(\"td\", _hoisted_7, _toDisplayString(container.name), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"p\", null, _toDisplayString(container.addedBy), 1 /* TEXT */)]), _hoisted_8]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    })]),\n    Footer: _withCtx(() => [_createVNode(_component_buttonValidation, {\n      onClick: _cache[3] || (_cache[3] = $event => $options.createServer()),\n      ok: true,\n      type: 'submit'\n    }, {\n      textButton: _withCtx(() => [_createTextVNode(\" Create \")]),\n      _: 1 /* STABLE */\n    })]),\n    popUps: _withCtx(() => []),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","value","_hoisted_1","_hoisted_2","class","_createBlock","_component_interractionLayout","forbiddenContainers","Header","_withCtx","_createTextVNode","InputName","type","placeholder","_cache","$event","$data","server","name","InputIp","ip","InputType","id","_hoisted_3","Containers","_createVNode","_component_tableExtension","tableHeaders","_hoisted_4","_hoisted_5","_hoisted_6","tableRows","_createElementBlock","_Fragment","_renderList","containers","container","index","key","_hoisted_7","_toDisplayString","addedBy","_hoisted_8","_","Footer","_component_buttonValidation","onClick","$options","createServer","ok","textButton","popUps"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/servers/create.vue"],"sourcesContent":["<template>\n\n    <interractionLayout :forbiddenContainers=\"true\" >\n\n        <template #Header>\n            Creating a new server\n        </template>\n        <template #InputName>\n            <input type=\"text\" placeholder=\"Server name...\" v-model=\"server.name\">\n        </template>\n        <template #InputIp>\n            <input type=\"text\" placeholder=\"Server ip address...\" v-model=\"server.ip\">\n        </template>\n        <template #InputType>\n            <select v-model=\"server.type\" name=\"\" id=\"\">\n                <option value=\"UAT\">UAT</option>\n                <option value=\"Prod\">Prod</option>\n            </select>\n        </template>\n        <template #Containers>\n            <tableExtension>\n                <template #tableHeaders>\n                    <td>Name</td>\n                    <td>Added by</td>\n                    <td>Actions</td>\n                </template>\n                <template #tableRows>\n                    <tr v-for=\"container, index in server.containers\" :key=\"index\">\n                        <td class=\"server-name\">{{ container.name }}</td>\n                        <td>\n                            <p>{{ container.addedBy }}</p>\n                        </td>\n                        <td>\n                            <p>Actions</p>\n                        </td>\n                    </tr>\n                </template>\n            </tableExtension>\n        </template>\n        <template #Footer>\n            <buttonValidation @click=\"createServer()\" :ok=\"true\" :type=\"'submit'\">\n                <template #textButton>\n                    Create\n                </template>\n            </buttonValidation>\n        </template>\n        <template #popUps>\n\n        </template>\n\n    </interractionLayout>\n\n\n</template>\n<script>\nimport apiFetch from \"@/common/api.service\"\n\nimport interractionLayout from \"./interraction-layout.vue\"\n\nimport buttonValidation from \"@/components/interraction/buttons/validation-button.vue\"\nimport tableExtension from \"@/components/interraction/tables/table-withextension.vue\"\nexport default{\n    name : 'create-server',\n    data(){\n        return{\n            server : {\n                name : '' ,\n                ip : '',\n                type : \"UAT\" ,\n                containers : [],\n            }\n        }\n    },\n    components: {\n        buttonValidation,\n        tableExtension,\n        interractionLayout\n    },\n    methods : {\n        createServer(){\n            let endpoint = '/server/create';\n            apiFetch.post(endpoint,\n            {name : this.server.name },\n            true,\n            false)\n            .then(()=>{\n                this.$router.push({name : 'serverShow' , params : { id : this.server}})\n            })\n        }\n    }\n}\n</script>\n<style scoped>\n\n\n.form-holder form{\n    grid-template-columns: 1fr 1fr;\n\n\n}\n.form-holder form .input-name {\n    grid-area: 1/1/2/2;\n}\n.form-holder form .input-name input, .form-holder form .input-type select{\n    width: 100%;\n}\n.form-holder form .input-ip {\n    grid-area: 2/1/3/3;\n}\n.form-holder form .input-type {\n    grid-area: 1/2/2/3;\n}\n.form-holder .containers{\n\n    grid-column: 1/3 ;\n    grid-row: 3/5;\n\n    height: 100%;\n    width: 100%;\n}\n\n.add-option{\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n.global-inputs{\n    min-height: 50px;\n\n    width: 100%;\n    max-height: 100%;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n\n    gap: 10px;\n\n    overflow-x: auto;\n}\n.global-input{\n    width: fit-content;\n    background-color: white;\n\n    display: grid;\n    grid-template-columns: 1fr auto;\n    grid-template-rows: 1fr 1fr ;\n\n    gap: 10px;\n}\n.global-input input{\n    width: 100%;\n\n    grid-column : 1/3;\n}\n.global-input svg:hover{\n    cursor: pointer;\n}\n\n.form-holder .table-containers{\n    width: 100%;\n    height: 100%;\n}\n\n</style>"],"mappings":";;gEAegBA,mBAAA,CAAgC;EAAxBC,KAAK,EAAC;AAAK,GAAC,KAAG;gEACvBD,mBAAA,CAAkC;EAA1BC,KAAK,EAAC;AAAM,GAAC,MAAI;oBADzBC,UAAgC,EAChCC,UAAkC,C;gEAM9BH,mBAAA,CAAa,YAAT,MAAI;gEACRA,mBAAA,CAAiB,YAAb,UAAQ;gEACZA,mBAAA,CAAgB,YAAZ,SAAO;;EAIHI,KAAK,EAAC;AAAa;gEAIvBJ,mBAAA,CAEK,a,aADDA,mBAAA,CAAc,WAAX,SAAO,E;;;;;uBA/BlCK,YAAA,CAgDqBC,6BAAA;IAhDAC,mBAAmB,EAAE;EAAI;IAE/BC,MAAM,EAAAC,QAAA,CAAC,MAElB,CANRC,gBAAA,CAI0B,yBAElB,E;IACWC,SAAS,EAAAF,QAAA,CAChB,MAAsE,C,gBAAtET,mBAAA,CAAsE;MAA/DY,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,gBAAgB;MAR3D,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQqEC,KAAA,CAAAC,MAAM,CAACC,IAAI,GAAAH,MAAA;mDAAXC,KAAA,CAAAC,MAAM,CAACC,IAAI,E;IAE7DC,OAAO,EAAAV,QAAA,CACd,MAA0E,C,gBAA1ET,mBAAA,CAA0E;MAAnEY,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,sBAAsB;MAXjE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAW2EC,KAAA,CAAAC,MAAM,CAACG,EAAE,GAAAL,MAAA;mDAATC,KAAA,CAAAC,MAAM,CAACG,EAAE,E;IAEjEC,SAAS,EAAAZ,QAAA,CAChB,MAGS,C,gBAHTT,mBAAA,CAGS;MAjBrB,uBAAAc,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAc6BC,KAAA,CAAAC,MAAM,CAACL,IAAI,GAAAG,MAAA;MAAEG,IAAI,EAAC,EAAE;MAACI,EAAE,EAAC;OAdrD,IAAAC,UAAA,2B,gBAc6BP,KAAA,CAAAC,MAAM,CAACL,IAAI,E;IAKrBY,UAAU,EAAAf,QAAA,CACjB,MAiBiB,CAjBjBgB,YAAA,CAiBiBC,yBAAA;MAhBFC,YAAY,EAAAlB,QAAA,CACnB,MAAa,CAAbmB,UAAa,EACbC,UAAiB,EACjBC,UAAgB,C;MAETC,SAAS,EAAAtB,QAAA,CACZ,MAA6C,E,kBAAjDuB,mBAAA,CAQKC,SAAA,QAnCzBC,WAAA,CA2BmDlB,KAAA,CAAAC,MAAM,CAACkB,UAAU,EA3BpE,CA2B+BC,SAAS,EAAEC,KAAK;6BAA3BL,mBAAA,CAQK;UAR8CM,GAAG,EAAED;QAAK,IACzDrC,mBAAA,CAAiD,MAAjDuC,UAAiD,EAAAC,gBAAA,CAAtBJ,SAAS,CAAClB,IAAI,kBACzClB,mBAAA,CAEK,aADDA,mBAAA,CAA8B,WAAAwC,gBAAA,CAAxBJ,SAAS,CAACK,OAAO,iB,GAE3BC,UAEK,C;;MAlC7BC,CAAA;;IAuCmBC,MAAM,EAAAnC,QAAA,CACb,MAImB,CAJnBgB,YAAA,CAImBoB,2BAAA;MAJAC,OAAK,EAAAhC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEgC,QAAA,CAAAC,YAAY;MAAKC,EAAE,EAAE,IAAI;MAAGrC,IAAI,EAAE;;MAC7CsC,UAAU,EAAAzC,QAAA,CAAC,MAEtB,CA3ChBC,gBAAA,CAyCsC,UAEtB,E;MA3ChBiC,CAAA;;IA8CmBQ,MAAM,EAAA1C,QAAA,CAAjB,MAEW;IAhDnBkC,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}