{"ast":null,"code":"import { createTextVNode as _createTextVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createSlots as _createSlots, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-cb828004\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  style: {\n    \"height\": \"100%\",\n    \"width\": \"100%\"\n  }\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"input-config-line\"\n};\nconst _hoisted_6 = [\"onUpdate:modelValue\"];\nconst _hoisted_7 = {\n  key: 1,\n  class: \"input-config-line\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_buttonValidation = _resolveComponent(\"buttonValidation\");\n  const _component_interraction = _resolveComponent(\"interraction\");\n  return _openBlock(), _createBlock(_component_interraction, null, _createSlots({\n    ScriptHeader: _withCtx(() => [_createTextVNode(\"Creating new step\")]),\n    InputName: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.step.name = $event),\n      type: \"text\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.step.name]])]),\n    InputScript: _withCtx(() => [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.step.script = $event)\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.req.scripts, script => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: script.id,\n        value: script.id\n      }, _toDisplayString(script.name + '.' + script.language), 9 /* TEXT, PROPS */, _hoisted_1);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.step.script]])]),\n    InputServer: _withCtx(() => [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.step.server = $event)\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.req.servers, server => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: server.id,\n        value: server.id\n      }, _toDisplayString(server.name), 9 /* TEXT, PROPS */, _hoisted_2);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.step.server]])]),\n    InputContainerChekbox: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.selectContainer = $event),\n      name: \"\",\n      id: \"\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.selectContainer]])]),\n    GlobalInputListing: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.step.inputs, (input, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"input-config-holder\",\n        key: index\n      }, [input.fromIncident ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, \"Make \" + _toDisplayString(input.label + ' ') + \" input global.\", 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n        type: \"checkbox\",\n        \"onUpdate:modelValue\": $event => input.fromIncident = $event\n      }, null, 8 /* PROPS */, _hoisted_6), [[_vModelCheckbox, input.fromIncident]])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"p\", null, \"Local \" + _toDisplayString(input.label + ' ') + \" input.\", 1 /* TEXT */)]))]);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n    Footer: _withCtx(() => [_createVNode(_component_buttonValidation, {\n      style: {\n        \"width\": \"100%\"\n      },\n      onClick: _cache[5] || (_cache[5] = $event => _ctx.createServer()),\n      ok: true,\n      type: 'submit'\n    }, {\n      textButton: _withCtx(() => [_createTextVNode(\" Create \")]),\n      _: 1 /* STABLE */\n    })]),\n    popUps: _withCtx(() => []),\n    _: 2 /* DYNAMIC */\n  }, [$data.selectContainer ? {\n    name: \"InputContainer\",\n    fn: _withCtx(() => [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.step.container = $event)\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.containersSelect, container => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: container.id,\n        value: container.id\n      }, _toDisplayString(container.name), 9 /* TEXT, PROPS */, _hoisted_3);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.step.container]])]),\n    key: \"0\"\n  } : undefined]), 1024 /* DYNAMIC_SLOTS */);\n}","map":{"version":3,"names":["style","key","class","_createBlock","_component_interraction","_createSlots","ScriptHeader","_withCtx","_createTextVNode","InputName","_createElementVNode","_cache","$event","$data","step","name","type","InputScript","script","_createElementBlock","_Fragment","_renderList","req","scripts","id","value","language","_hoisted_1","InputServer","server","servers","_hoisted_2","InputContainerChekbox","selectContainer","GlobalInputListing","_hoisted_4","inputs","input","index","fromIncident","_hoisted_5","_toDisplayString","label","_hoisted_6","_hoisted_7","Footer","_createVNode","_component_buttonValidation","onClick","_ctx","createServer","ok","textButton","_","popUps","fn","container","containersSelect","_hoisted_3","undefined"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/steps/create.vue"],"sourcesContent":["<template>\n    <interraction>\n        <template #ScriptHeader >Creating new step</template>\n\n\n        <template #InputName >\n            <input v-model=\"step.name\"  type=\"text\">\n        </template>\n        <template #InputScript >\n            <select v-model=\"step.script\" >\n                <option v-for=\"script in req.scripts\" :key=\"script.id\" :value=\"script.id\">{{ script.name+'.'+script.language }}</option>\n            </select>\n        </template>\n        <template #InputServer >\n            <select v-model=\"step.server\"  >\n                <option v-for=\"server in req.servers\" :key=\"server.id\" :value=\"server.id\">{{ server.name}}</option>\n            </select>\n        </template>\n        <template #InputContainerChekbox >\n            <input type=\"checkbox\" v-model=\"selectContainer\" name=\"\" id=\"\">\n        </template>\n        <template v-if=\"selectContainer\" #InputContainer >\n            <select v-model=\"step.container\"  >\n                <option v-for=\"container in containersSelect\" :key=\"container.id\" :value=\"container.id\">{{ container.name}}</option>\n            </select>\n        </template>\n\n\n\n        <template #GlobalInputListing >\n            <div style=\"height: 100%;width: 100%;\" >\n                <div class=\"input-config-holder\" v-for=\"input,index in step.inputs\" :key=\"index\" >\n                    <div class=\"input-config-line\"   v-if=\"input.fromIncident\" >\n                        <p>Make {{ input.label +' ' }} input global.</p>\n                        <input type=\"checkbox\" v-model=\"input.fromIncident\">\n                    </div>\n                    <div class=\"input-config-line\"  v-else >\n                        <p>Local {{ input.label +' ' }} input.</p>\n                    </div>\n                    \n                </div>\n            </div>\n        </template>\n        <template #Footer >\n            <buttonValidation style=\"width: 100%;\"  @click=\"createServer()\" :ok=\"true\" :type=\"'submit'\">\n                <template #textButton>\n                    Create\n                </template>\n            </buttonValidation>\n        </template> \n\n        <template #popUps >\n            \n        </template>\n\n    </interraction>\n</template>\n<script>\nimport apiFetch from \"@/common/api.service\"\nimport interraction from \"./interraction-script.vue\"\nimport buttonValidation from \"@/components/interraction/buttons/validation-button.vue\"\nexport default{\n    name : 'script-create',\n    components : {\n        interraction,\n        buttonValidation\n    },\n    data(){\n        return{\n            step : {\n                name : '',\n                server : null ,\n                container : null,\n                script : null,\n                inputs : null\n            },\n            req : {\n                scripts : [],\n                servers : [],\n            },\n            selectContainer : false,\n            containersSelect : []\n        }\n    },\n    watch : {\n        'step.server'(){\n            let server = this.req.servers.filter( server => server.id === this.step.server );\n            this.containersSelect =  server[0].containers;\n        },\n        selectContainer(newV,oldV){\n            if(oldV == false && newV == true){\n                if(this.step.server == null){\n                    this.emitter.emit(\"sidebar-error\",{error : true , description : 'Please select a server first.'})\n                    this.selectContainer = false;\n                }\n            }else if(oldV == true && newV == false){\n                this.containersSelect = [];\n            }\n        },\n        'step.script'(){\n            let endpoint = '/incident/'+this.$route.params.id+'/script/'+this.step.script+'/join'\n            apiFetch.get(endpoint,false)\n            .then((inputs)=>{\n                this.step.inputs = inputs\n            })\n        }\n    },\n    beforeMount(){\n        // incident/3/step/create\n        let endpoint = '/incident/'+ this.$route.params.id+'/step/create'\n        apiFetch.get(endpoint,false)\n        .then((req)=>{\n            this.req =req;\n        })\n    }\n}\n</script>\n<style scoped>\n.input-config-holder{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n\n    gap: 5px;\n    box-sizing: border-box;\n\n    overflow-y: auto;\n\n    width: 100%;\n\n\n}\n.input-config-line{\n\n    width: 100%;\n\n    padding: var(--extra-small-padding);\n    box-sizing: border-box;\n\n    border: solid 1px black;\n    border-radius: 3px;\n\n    background-color: var(--light-color-0);\n\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    gap:3px;\n\n    margin-top: 5px;\n}\n\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}