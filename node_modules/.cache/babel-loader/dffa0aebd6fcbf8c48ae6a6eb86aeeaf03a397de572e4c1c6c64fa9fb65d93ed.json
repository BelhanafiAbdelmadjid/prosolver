{"ast":null,"code":"import { createTextVNode as _createTextVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createSlots as _createSlots, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-16b3a3ff\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  disabled: \"\"\n};\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = {\n  disabled: \"\"\n};\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  style: {\n    \"height\": \"100%\",\n    \"width\": \"100%\"\n  }\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"input-config-line\"\n};\nconst _hoisted_8 = [\"onUpdate:modelValue\"];\nconst _hoisted_9 = {\n  key: 1,\n  class: \"input-config-line\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_buttonValidation = _resolveComponent(\"buttonValidation\");\n  const _component_interraction = _resolveComponent(\"interraction\");\n  return _openBlock(), _createBlock(_component_interraction, {\n    forbiddenInputs: true\n  }, _createSlots({\n    ScriptHeader: _withCtx(() => [_createTextVNode(\"Creating new step\")]),\n    InputName: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.step.name = $event),\n      type: \"text\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.step.name]])]),\n    InputScript: _withCtx(() => [_createElementVNode(\"select\", _hoisted_1, [_createElementVNode(\"option\", {\n      selected: \"\",\n      value: $data.step.script.id\n    }, _toDisplayString($data.step.script.name), 9 /* TEXT, PROPS */, _hoisted_2)])]),\n    InputServer: _withCtx(() => [_createElementVNode(\"select\", _hoisted_3, [_createElementVNode(\"option\", {\n      selected: \"\",\n      value: $data.step.server.id\n    }, _toDisplayString($data.step.server.name), 9 /* TEXT, PROPS */, _hoisted_4)])]),\n    InputContainerChekbox: _withCtx(() => []),\n    GlobalInputListing: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.step.inputs, (input, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"input-config-holder\",\n        key: index\n      }, [input.fromIncident ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"p\", null, [_createTextVNode(\"Make \"), _createElementVNode(\"strong\", null, _toDisplayString(input.label + ' '), 1 /* TEXT */), _createTextVNode(\" input global.\")]), _withDirectives(_createElementVNode(\"input\", {\n        type: \"checkbox\",\n        \"onUpdate:modelValue\": $event => input.fromIncident = $event\n      }, null, 8 /* PROPS */, _hoisted_8), [[_vModelCheckbox, input.fromIncident]])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"p\", null, [_createTextVNode(\"Local \"), _createElementVNode(\"strong\", null, _toDisplayString(input.label + ' '), 1 /* TEXT */), _createTextVNode(\" input.\")])]))]);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n    Footer: _withCtx(() => [_createVNode(_component_buttonValidation, {\n      style: {\n        \"width\": \"100%\"\n      },\n      onClick: _cache[1] || (_cache[1] = $event => $options.createStep()),\n      ok: true,\n      type: 'submit'\n    }, {\n      textButton: _withCtx(() => [_createTextVNode(\" Create \")]),\n      _: 1 /* STABLE */\n    })]),\n    popUps: _withCtx(() => []),\n    _: 2 /* DYNAMIC */\n  }, [$data.step.container ? {\n    name: \"InputContainer\",\n    fn: _withCtx(() => [_createElementVNode(\"select\", null, [_createElementVNode(\"option\", {\n      value: $data.step.container.id\n    }, _toDisplayString($data.step.container.name), 9 /* TEXT, PROPS */, _hoisted_5)])]),\n    key: \"0\"\n  } : undefined]), 1024 /* DYNAMIC_SLOTS */);\n}","map":{"version":3,"names":["disabled","style","key","class","_createBlock","_component_interraction","forbiddenInputs","_createSlots","ScriptHeader","_withCtx","_createTextVNode","InputName","_createElementVNode","_cache","$event","$data","step","name","type","InputScript","_hoisted_1","selected","value","script","id","_hoisted_2","InputServer","_hoisted_3","server","_hoisted_4","InputContainerChekbox","GlobalInputListing","_hoisted_6","_createElementBlock","_Fragment","_renderList","inputs","input","index","fromIncident","_hoisted_7","_toDisplayString","label","_hoisted_8","_hoisted_9","Footer","_createVNode","_component_buttonValidation","onClick","$options","createStep","ok","textButton","_","popUps","container","fn","_hoisted_5","undefined"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/steps/show.vue"],"sourcesContent":["<template>\n    <interraction :forbiddenInputs=\"true\" >\n        <template #ScriptHeader >Creating new step</template>\n\n\n        <template #InputName >\n            <input v-model=\"step.name\"  type=\"text\">\n        </template>\n        <template #InputScript >\n            <select disabled  >\n                <option  selected :value=\"step.script.id\"   >{{ step.script.name }}</option>\n            </select>\n        </template>\n        <template #InputServer >\n            <select disabled   >\n                <option selected :value=\"step.server.id\">{{ step.server.name}}</option>\n            </select>\n        </template>\n        <template #InputContainerChekbox >\n        </template>\n        <template v-if=\"step.container\" #InputContainer >\n            <select   >\n                <option  :value=\"step.container.id\">{{ step.container.name}}</option>\n            </select>\n        </template>\n\n\n\n        <template #GlobalInputListing >\n            <div style=\"height: 100%;width: 100%;\" >\n                <div class=\"input-config-holder\" v-for=\"input,index in step.inputs\" :key=\"index\" >\n                    <div class=\"input-config-line\"   v-if=\"input.fromIncident\" >\n                        <p>Make <strong> {{ input.label +' ' }}</strong> input global.</p>\n                        <input type=\"checkbox\" v-model=\"input.fromIncident\">\n                    </div>\n                    <div class=\"input-config-line\"  v-else >\n                        <p>Local <strong> {{ input.label +' ' }} </strong> input.</p>\n                    </div>\n                    \n                </div>\n            </div>\n        </template>\n        <template #Footer >\n            <buttonValidation style=\"width: 100%;\"  @click=\"createStep()\" :ok=\"true\" :type=\"'submit'\">\n                <template #textButton>\n                    Create\n                </template>\n            </buttonValidation>\n        </template> \n\n        <template #popUps >\n            \n        </template>\n\n    </interraction>\n</template>\n<script>\nimport apiFetch from \"@/common/api.service\"\nimport interraction from \"./interraction-script.vue\"\nimport buttonValidation from \"@/components/interraction/buttons/validation-button.vue\"\nexport default{\n    name : 'script-create',\n    components : {\n        interraction,\n        buttonValidation\n    },\n    data(){\n        return{\n            step : {\n                name : '',\n                server : null ,\n                container : null,\n                script : null,\n                inputs : []\n            },\n            req : {\n                scripts : [],\n                servers : [],\n            },\n            selectContainer : false,\n            containersSelect : []\n        }\n    },\n    watch : {\n        // 'step.server'(){\n        //     let server = this.req.servers.filter( server => server.id === this.step.server );\n        //     this.containersSelect =  server[0].containers;\n        // },\n        // selectContainer(newV,oldV){\n        //     if(oldV == false && newV == true){\n        //         if(this.step.server == null){\n        //             this.emitter.emit(\"sidebar-error\",{error : true , description : 'Please select a server first.'})\n        //             this.selectContainer = false;\n        //         }\n        //     }else if(oldV == true && newV == false){\n        //         this.containersSelect = [];\n        //     }\n        // },\n        // 'step.script'(){\n        //     let endpoint = '/incident/'+this.$route.params.id+'/script/'+this.step.script+'/join'\n        //     apiFetch.get(endpoint,false)\n        //     .then((inputs)=>{\n        //         this.step.inputs = inputs\n        //     })\n        // }\n    },\n    beforeMount(){\n        // incident/3/step/create\n\n        let endpoint = '/incident/'+ this.$route.params.id+'/step/'+this.$route.params.stepID\n        apiFetch.get(endpoint,false)\n        .then((req)=>{\n            this.step= req;\n        })\n\n        let endpoint2 = '/incident/'+ this.$route.params.id+'/step/create'\n        apiFetch.get(endpoint2,false)\n        .then((req)=>{\n            this.req =req;\n        })\n    },\n    methods : {\n        createStep(){\n\n            for(let input of this.step.inputs){\n                if(input.fromIncident == true){\n                    input.parentInput = input.incidentID;\n                }\n            }\n\n            let endpoint = '/incident/step/create';\n            apiFetch.post(endpoint,{\n                incident : this.$route.params.id,\n                server : this.step.server,\n                script : this.step.script,\n                container : this.step.container,\n                name : this.step.name,\n                inputs : this.step.inputs\n            },\n            true,\n            false)\n            .then((res)=>{\n\n                console.log(res)\n            })\n\n        }\n    }\n}\n</script>\n<style scoped>\n.input-config-holder{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n\n    gap: 5px;\n    box-sizing: border-box;\n\n    overflow-y: auto;\n\n    width: 100%;\n\n\n}\n.input-config-line{\n\n    width: 100%;\n\n    padding: var(--extra-small-padding);\n    box-sizing: border-box;\n\n    border: solid 1px black;\n    border-radius: 3px;\n\n    background-color: white;\n\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    gap:3px;\n\n    margin-top: 5px;\n}\n.input-config-line:hover{\n    border: solid 1px var(--warm-color-1);\n}\n\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}