{"ast":null,"code":"import { UseAuthStore } from \"@/store/store.js\";\nimport popupDisplay from \"@/components/interraction/popups/popup-display.vue\";\nimport queryNavbar from \"@/components/interraction/query/query-navbar.vue\";\nimport tableExtension from \"@/components/interraction/tables/table-withextension.vue\";\nexport default {\n  name: 'supervision-view',\n  data() {\n    return {\n      AuthStore: UseAuthStore(),\n      servers: [],\n      displayContainersOnPopUp: false\n    };\n  },\n  components: {\n    queryNavbar,\n    tableExtension,\n    popupDisplay\n  },\n  methods: {\n    getServers() {\n      this.servers = [{\n        id: 5,\n        name: \"Onboarding01-uat\",\n        ip: \"192.168.1.104\",\n        status: 'Active'\n      }, {\n        id: 15,\n        name: \"Onboarding02-uat\",\n        ip: \"192.168.1.107\",\n        status: 'Down'\n      }];\n    },\n    onInputChanged(inputValue) {\n      this.getServersWithNameLike(inputValue);\n    },\n    getServersWithNameLike(NameLike) {\n      console.log(NameLike);\n      //fetch here after\n    }\n  },\n  beforeMount() {\n    this.getServers();\n  }\n};","map":{"version":3,"names":["UseAuthStore","popupDisplay","queryNavbar","tableExtension","name","data","AuthStore","servers","displayContainersOnPopUp","components","methods","getServers","id","ip","status","onInputChanged","inputValue","getServersWithNameLike","NameLike","console","log","beforeMount"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/supervision.vue"],"sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                                  JSON DATA                                 */\n/* -------------------------------------------------------------------------- */\n/*  \n\nservers : Array\n[\n{\n    id : X , name : \"test\" , ip : \"@ip\" , status : \"Active/Down\"\n}\n]\n\n/* -------------------------------------------------------------------------- */\n/*                                    TO DO                                   */\n/* -------------------------------------------------------------------------- */\n\nMethods : getServers , getServersWithNameLike\n\n*/\n<template>\n  <div class=\"holders hoder-supervision\">\n    <div class=\"Welcomeback colorfull-gradient-1\">\n      <h1>Welcome back, {{AuthStore.username}}!ðŸ‘‹</h1>\n      <p>How things are going today?</p>\n    </div>\n    <queryNavbar @input-changed=\"onInputChanged\" :theme=\"'white'\">\n      <template #Title>\n        Servers\n      </template>\n    </queryNavbar>\n    <tableExtension>\n      <template #tableRows>\n        <tr v-for=\"server in servers\" :key=\"server.id\">\n          <td class=\"server-name\">{{ server.name }}</td>\n          <td>\n            <p>{{ server.ip }}</p>\n          </td>\n          <td>\n            <p class=\"holder-status\">\n              <span\n                :class=\"{ 'status-dot-active' : server.status == 'Active','status-dot-down' : server.status == 'Down'  }\"\n                class=\"status-dot\"></span>\n              <span>{{ server.status }}</span>\n            </p>\n          </td>\n        </tr>\n      </template>\n    </tableExtension>\n\n    <popupDisplay \n      v-if=\"displayContainersOnPopUp\"\n    ></popupDisplay>\n  </div>\n</template>\n<script>\nimport { UseAuthStore } from \"@/store/store.js\"\n\nimport popupDisplay from \"@/components/interraction/popups/popup-display.vue\"\nimport queryNavbar from \"@/components/interraction/query/query-navbar.vue\"\nimport tableExtension from \"@/components/interraction/tables/table-withextension.vue\"\nexport default{\n    name : 'supervision-view',\n    data(){\n        return{\n          AuthStore : UseAuthStore(),\n          servers : [],\n          displayContainersOnPopUp : false\n        } \n    },\n    components : {\n      queryNavbar,\n      tableExtension,\n      popupDisplay\n    },\n    methods : {\n      getServers(){\n            this.servers = [\n                {\n                    id : 5,\n                    name : \"Onboarding01-uat\",\n                    ip : \"192.168.1.104\",\n                    status : 'Active'\n                },\n                {\n                    id : 15,\n                    name : \"Onboarding02-uat\",\n                    ip : \"192.168.1.107\",\n                    status : 'Down'\n                },\n            ]\n      },\n      onInputChanged(inputValue){\n        this.getServersWithNameLike(inputValue)\n      },\n      getServersWithNameLike(NameLike){\n        console.log(NameLike)\n        //fetch here after\n      }\n    },\n    beforeMount(){\n        this.getServers();\n    }\n}\n</script>\n<style scoped>\n\n.hoder-supervision{\n  height: 100%;\n  width: 100%;\n\n  display: grid;\n  grid-template-rows: 120px  50px  1fr;\n}\n.Welcomeback{\n  height: auto;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  gap : 5px;\n  padding : var(--medieum-padding);\n  box-sizing: border-box;\n  border-radius: var(--medieum-border-radius);\n\n\n\n  color:white;\n}\n\n\n</style>"],"mappings":"AAuDA,SAASA,YAAW,QAAS,kBAAiB;AAE9C,OAAOC,YAAW,MAAO,oDAAmD;AAC5E,OAAOC,WAAU,MAAO,kDAAiD;AACzE,OAAOC,cAAa,MAAO,0DAAyD;AACpF,eAAc;EACVC,IAAG,EAAI,kBAAkB;EACzBC,IAAIA,CAAA,EAAE;IACF,OAAM;MACJC,SAAQ,EAAIN,YAAY,CAAC,CAAC;MAC1BO,OAAM,EAAI,EAAE;MACZC,wBAAuB,EAAI;IAC7B;EACJ,CAAC;EACDC,UAAS,EAAI;IACXP,WAAW;IACXC,cAAc;IACdF;EACF,CAAC;EACDS,OAAM,EAAI;IACRC,UAAUA,CAAA,EAAE;MACN,IAAI,CAACJ,OAAM,GAAI,CACX;QACIK,EAAC,EAAI,CAAC;QACNR,IAAG,EAAI,kBAAkB;QACzBS,EAAC,EAAI,eAAe;QACpBC,MAAK,EAAI;MACb,CAAC,EACD;QACIF,EAAC,EAAI,EAAE;QACPR,IAAG,EAAI,kBAAkB;QACzBS,EAAC,EAAI,eAAe;QACpBC,MAAK,EAAI;MACb,CAAC,CACL;IACN,CAAC;IACDC,cAAcA,CAACC,UAAU,EAAC;MACxB,IAAI,CAACC,sBAAsB,CAACD,UAAU;IACxC,CAAC;IACDC,sBAAsBA,CAACC,QAAQ,EAAC;MAC9BC,OAAO,CAACC,GAAG,CAACF,QAAQ;MACpB;IACF;EACF,CAAC;EACDG,WAAWA,CAAA,EAAE;IACT,IAAI,CAACV,UAAU,CAAC,CAAC;EACrB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}