{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createSlots as _createSlots, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-eb3a2ee8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  style: {\n    \"height\": \"100%\",\n    \"width\": \"100%\"\n  }\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"input-config-line\"\n};\nconst _hoisted_6 = [\"onUpdate:modelValue\"];\nconst _hoisted_7 = {\n  key: 1,\n  class: \"input-config-line\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_buttonValidation = _resolveComponent(\"buttonValidation\");\n  const _component_interraction = _resolveComponent(\"interraction\");\n  return _openBlock(), _createBlock(_component_interraction, {\n    forbiddenInputs: false\n  }, _createSlots({\n    ScriptHeader: _withCtx(() => [_createTextVNode(\"Edit step \" + _toDisplayString($data.step.name), 1 /* TEXT */)]),\n    InputName: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.step.name = $event),\n      type: \"text\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.step.name]])]),\n    InputScript: _withCtx(() => [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.step.script.id = $event)\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.req.scripts, script => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: script.id,\n        value: script.id\n      }, _toDisplayString(script.name + '.' + script.language), 9 /* TEXT, PROPS */, _hoisted_1);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.step.script.id]])]),\n    InputServer: _withCtx(() => [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.step.server.id = $event)\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.req.servers, server => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: server.id,\n        value: server.id\n      }, _toDisplayString(server.name), 9 /* TEXT, PROPS */, _hoisted_2);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.step.server.id]])]),\n    InputContainerChekbox: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.selectContainer = $event),\n      name: \"\",\n      id: \"\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.selectContainer]])]),\n    GlobalInputListing: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.step.inputs, (input, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"input-config-holder\",\n        key: index\n      }, [input.fromIncident ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, [_createTextVNode(\"Make \"), _createElementVNode(\"strong\", null, _toDisplayString(input.label + ' '), 1 /* TEXT */), _createTextVNode(\" input global.\")]), _withDirectives(_createElementVNode(\"input\", {\n        type: \"checkbox\",\n        \"onUpdate:modelValue\": $event => input.fromIncident = $event\n      }, null, 8 /* PROPS */, _hoisted_6), [[_vModelCheckbox, input.fromIncident]])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"p\", null, [_createTextVNode(\"Local \"), _createElementVNode(\"strong\", null, _toDisplayString(input.label + ' '), 1 /* TEXT */), _createTextVNode(\" input.\")])]))]);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n    Footer: _withCtx(() => [_createVNode(_component_buttonValidation, {\n      onClick: _cache[5] || (_cache[5] = $event => _ctx.$router.back()),\n      error: true,\n      type: 'submit'\n    }, {\n      textButton: _withCtx(() => [_createTextVNode(\" Cancel \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_buttonValidation, {\n      onClick: _cache[6] || (_cache[6] = $event => $options.createStep()),\n      correct: true,\n      type: 'submit'\n    }, {\n      textButton: _withCtx(() => [_createTextVNode(\" Save changes \")]),\n      _: 1 /* STABLE */\n    })]),\n    popUps: _withCtx(() => []),\n    _: 2 /* DYNAMIC */\n  }, [$data.selectContainer ? {\n    name: \"InputContainer\",\n    fn: _withCtx(() => [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.step.container = $event)\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.containersSelect, container => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: container.id,\n        value: container.id\n      }, _toDisplayString(container.name), 9 /* TEXT, PROPS */, _hoisted_3);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.step.container]])]),\n    key: \"0\"\n  } : undefined]), 1024 /* DYNAMIC_SLOTS */);\n}","map":{"version":3,"names":["style","key","class","_createBlock","_component_interraction","forbiddenInputs","_createSlots","ScriptHeader","_withCtx","_createTextVNode","_toDisplayString","$data","step","name","InputName","_createElementVNode","_cache","$event","type","InputScript","script","id","_createElementBlock","_Fragment","_renderList","req","scripts","value","language","_hoisted_1","InputServer","server","servers","_hoisted_2","InputContainerChekbox","selectContainer","GlobalInputListing","_hoisted_4","inputs","input","index","fromIncident","_hoisted_5","label","_hoisted_6","_hoisted_7","Footer","_createVNode","_component_buttonValidation","onClick","_ctx","$router","back","error","textButton","_","$options","createStep","correct","popUps","fn","container","containersSelect","_hoisted_3","undefined"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/steps/edit.vue"],"sourcesContent":["<template>\n    <interraction :forbiddenInputs=\"false\" >\n        <template #ScriptHeader >Edit step {{ step.name }}</template>\n\n\n        <template #InputName >\n            <input  v-model=\"step.name\"  type=\"text\">\n        </template>\n        <template #InputScript >\n            <select  v-model=\"step.script.id\" >\n                <option v-for=\"script in req.scripts\" :key=\"script.id\" :value=\"script.id\">{{ script.name+'.'+script.language }}</option>\n            </select>\n        </template>\n        <template #InputServer >\n            <select  v-model=\"step.server.id\"  >\n                <option v-for=\"server in req.servers\" :key=\"server.id\" :value=\"server.id\">{{ server.name }}</option>\n            </select>\n        </template>\n        <template #InputContainerChekbox >\n            <input type=\"checkbox\" v-model=\"selectContainer\" name=\"\" id=\"\">\n        </template>\n        <template v-if=\"selectContainer\" #InputContainer >\n            <select  v-model=\"step.container\"  >\n                <option v-for=\"container in containersSelect\" :key=\"container.id\" :value=\"container.id\">{{ container.name}}</option>\n            </select>\n        </template>\n\n\n\n        <template #GlobalInputListing >\n            <div style=\"height: 100%;width: 100%;\" >\n                <div class=\"input-config-holder\" v-for=\"input,index in step.inputs\" :key=\"index\" >\n                    <div class=\"input-config-line\"   v-if=\"input.fromIncident\" >\n                        <p>Make <strong> {{ input.label +' ' }}</strong> input global.</p>\n                        <input type=\"checkbox\" v-model=\"input.fromIncident\">\n                    </div>\n                    <div class=\"input-config-line\"  v-else >\n                        <p>Local <strong> {{ input.label +' ' }} </strong> input.</p>\n                    </div>\n                    \n                </div>\n            </div>\n        </template>\n        <template #Footer >\n            <buttonValidation   @click=\"$router.back()\" :error=\"true\" :type=\"'submit'\">\n                <template #textButton>\n                    Cancel\n                </template>\n            </buttonValidation>\n            <buttonValidation   @click=\"createStep()\" :correct=\"true\" :type=\"'submit'\">\n                <template #textButton>\n                    Save changes\n                </template>\n            </buttonValidation>\n        </template> \n\n        <template #popUps >\n            \n        </template>\n\n    </interraction>\n</template>\n<script>\nimport apiFetch from \"@/common/api.service\"\nimport interraction from \"./interraction-script.vue\"\nimport buttonValidation from \"@/components/interraction/buttons/validation-button.vue\"\nexport default{\n    name : 'script-create',\n    components : {\n        interraction,\n        buttonValidation\n    },\n    data(){\n        return{\n            step : {\n                name : '',\n                server : {\n                    id : null\n                } ,\n                container : {\n                    id : null\n                },\n                script : {\n                    id : null\n                },\n                inputs : []\n            },\n            req : {\n                scripts : [],\n                servers : [],\n            },\n            selectContainer : false,\n            containersSelect : []\n        }\n    },\n    watch : {\n        'step.server.id'(){\n            console.log('fetching with server',this.step.server.id)\n            let server = this.req.servers.filter( server => server.id === this.step.server.id );\n            this.containersSelect =  server[0].containers;\n        },\n        selectContainer(newV,oldV){\n            if(oldV == false && newV == true){\n                if(this.step.server == null){\n                    this.emitter.emit(\"sidebar-error\",{error : true , description : 'Please select a server first.'})\n                    this.selectContainer = false;\n                }\n            }else if(oldV == true && newV == false){\n                this.containersSelect = [];\n            }\n        },\n        'step.script.id'(){\n            console.log('fetching',this.step.script)\n            let endpoint = '/incident/'+this.$route.params.id+'/script/'+this.step.script.id+'/join'\n            apiFetch.get(endpoint,false)\n            .then((inputs)=>{\n                this.step.inputs = inputs\n            })\n        }\n    },\n    beforeMount(){\n        // incident/3/step/create\n\n        let endpoint = '/incident/'+ this.$route.params.id+'/step/'+this.$route.params.stepID\n        apiFetch.get(endpoint,false)\n        .then((req)=>{\n            this.step= req;\n\n            // this.selectContainer = this.step.container != null ? true : false\n        })\n\n        let endpoint2 = '/incident/'+ this.$route.params.id+'/step/create'\n        apiFetch.get(endpoint2,false)\n        .then((req)=>{\n            this.req =req;\n        })\n    },\n    methods : {\n        createStep(){\n\n            for(let input of this.step.inputs){\n                if(input.fromIncident == true){\n                    input.parentInput = input.incidentID;\n                }\n            }\n\n            let endpoint = '/incident/step/create';\n            apiFetch.post(endpoint,{\n                incident : this.$route.params.id,\n                server : this.step.server,\n                script : this.step.script,\n                container : this.step.container,\n                name : this.step.name,\n                inputs : this.step.inputs\n            },\n            true,\n            false)\n            .then((res)=>{\n\n                console.log(res)\n            })\n\n        }\n    }\n}\n</script>\n<style scoped>\n.input-config-holder{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n\n    gap: 5px;\n    box-sizing: border-box;\n\n    overflow-y: auto;\n\n    width: 100%;\n\n\n}\n.input-config-line{\n\n    width: 100%;\n\n    padding: var(--extra-small-padding);\n    box-sizing: border-box;\n\n    border: solid 1px black;\n    border-radius: 3px;\n\n    background-color: white;\n\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    gap:3px;\n\n    margin-top: 5px;\n}\n.input-config-line:hover{\n    border: solid 1px var(--warm-color-1);\n}\n\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}