{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiFetch from \"@/common/api.service\";\nimport interractionLayout from \"./interraction-layout.vue\";\nimport buttonValidation from \"@/components/interraction/buttons/validation-button.vue\";\nimport tableExtension from \"@/components/interraction/tables/table-withextension.vue\";\nimport { UseAuthStore } from \"@/store/store\";\nexport default {\n  name: 'show-server',\n  data() {\n    return {\n      server: {\n        name: '',\n        ip: '',\n        type: \"UAT\",\n        containers: []\n      },\n      AuthStore: UseAuthStore()\n    };\n  },\n  components: {\n    buttonValidation,\n    tableExtension,\n    interractionLayout\n  },\n  methods: {\n    createServer() {\n      let endpoint = '/server/create';\n      apiFetch.post(endpoint, {\n        ...this.server\n      }, true, false).then(() => {\n        this.$router.push({\n          name: 'serverShow',\n          params: {\n            id: this.server.id\n          }\n        });\n      });\n    },\n    enterEditMode() {\n      if (this.AuthStore.userType == 'Admin') {\n        this.$router.push({\n          name: 'serverEdit',\n          props: {\n            id: this.server.id\n          },\n          query: {\n            name: this.server.name,\n            ip: this.server.ip,\n            type: this.server.type\n          }\n        });\n      } else {\n        this.emitter.emit(\"sidebar-error\", {\n          error: true,\n          description: \"You are not allowed to enter edit mode please reach to an admin.\"\n        });\n      }\n    }\n  },\n  mounted() {\n    if (this.$route.query.name) {\n      this.server.name = this.$route.query.name;\n    }\n    if (this.$route.query.type) {\n      this.server.type = this.$route.query.type;\n    }\n    if (this.$route.query.ip) {\n      this.server.ip = this.$route.query.ip;\n    }\n    let endpoint = \"/server/\" + this.$route.params.id;\n    apiFetch.get(endpoint, false).then(server => {\n      this.server = server;\n    });\n  }\n};","map":{"version":3,"names":["apiFetch","interractionLayout","buttonValidation","tableExtension","UseAuthStore","name","data","server","ip","type","containers","AuthStore","components","methods","createServer","endpoint","post","then","$router","push","params","id","enterEditMode","userType","props","query","emitter","emit","error","description","mounted","$route","get"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/servers/show.vue"],"sourcesContent":["<template>\n\n    <interractionLayout :forbiddenContainers=\"true\" >\n\n        <template #Header>\n            {{ server.name + \" server\" }} \n        </template>\n        <template #InputName>\n            <input disabled type=\"text\" placeholder=\"Server name...\" v-model=\"server.name\">\n        </template>\n        <template #InputIp>\n            <input disabled type=\"text\" placeholder=\"Server ip address...\" v-model=\"server.ip\">\n        </template>\n        <template #InputType>\n            <select disabled v-model=\"server.type\" name=\"\" id=\"\">\n                <option value=\"UAT\">UAT</option>\n                <option value=\"PROD\">Prod</option>\n            </select>\n        </template>\n        <template #ContainerAddButton >\n            <label style=\"cursor: pointer;\">Add+</label>\n        </template>\n        <template #Containers>\n            <tableExtension>\n                <template #tableHeaders>\n                    <td>Name</td>\n                    <td>Added by</td>\n                    <td>Actions</td>\n                </template>\n                <template #tableRows>\n                    <tr v-for=\"container, index in server.containers\" :key=\"index\">\n                        <td class=\"server-name\">{{ container.name }}</td>\n                        <td>\n                            <p>{{ container.addedBy }}</p>\n                        </td>\n                        <td>\n                            <p>Actions</p>\n                        </td>\n                    </tr>\n                </template>\n            </tableExtension>\n        </template>\n        <template v-if=\"this.AuthStore.userType == 'Admin'\" #Footer>\n            <buttonValidation :warning=\"true\" @click=\"enterEditMode()\"  :type=\"'submit'\">\n                <template #textButton>\n                    Edit\n                </template>\n            </buttonValidation>\n        </template>\n        <template #popUps>\n\n        </template>\n\n    </interractionLayout>\n\n\n</template>\n<script>\nimport apiFetch from \"@/common/api.service\"\n\nimport interractionLayout from \"./interraction-layout.vue\"\n\nimport buttonValidation from \"@/components/interraction/buttons/validation-button.vue\"\nimport tableExtension from \"@/components/interraction/tables/table-withextension.vue\"\n\nimport { UseAuthStore } from \"@/store/store\"\nexport default{\n    name : 'show-server',\n    data(){\n        return{\n            server : {\n                name : '' ,\n                ip : '',\n                type : \"UAT\" ,\n                containers : [],\n            },\n            AuthStore : UseAuthStore()\n        }\n    },\n    components: {\n        buttonValidation,\n        tableExtension,\n        interractionLayout\n    },\n    methods : {\n        createServer(){\n            let endpoint = '/server/create';\n            apiFetch.post(endpoint,\n            {...this.server},\n            true,\n            false)\n            .then(()=>{\n                this.$router.push({name : 'serverShow' , params : { id : this.server.id}})\n            })\n        },\n        enterEditMode(){\n            if(this.AuthStore.userType == 'Admin'){\n                this.$router.push({name : 'serverEdit' , props : { id : this.server.id } , query : { name : this.server.name, ip : this.server.ip, type : this.server.type }})\n            }else{\n                this.emitter.emit(\"sidebar-error\",{\n                    error : true,\n                    description : \"You are not allowed to enter edit mode please reach to an admin.\"\n                })\n            }\n        }\n    },\n    mounted(){\n        if(this.$route.query.name){\n            this.server.name= this.$route.query.name\n        }\n        if(this.$route.query.type){\n            this.server.type= this.$route.query.type\n        }\n        if(this.$route.query.ip){\n            this.server.ip= this.$route.query.ip\n        }\n\n        let endpoint = \"/server/\"+this.$route.params.id;\n        apiFetch.get(endpoint,false)\n        .then((server)=>{\n            this.server = server;\n        })\n    }\n}\n</script>\n<style scoped>\n\n\n.form-holder form{\n    grid-template-columns: 1fr 1fr;\n\n\n}\n.form-holder form .input-name {\n    grid-area: 1/1/2/2;\n}\n.form-holder form .input-name input, .form-holder form .input-type select{\n    width: 100%;\n}\n.form-holder form .input-ip {\n    grid-area: 2/1/3/3;\n}\n.form-holder form .input-type {\n    grid-area: 1/2/2/3;\n}\n.form-holder .containers{\n\n    grid-column: 1/3 ;\n    grid-row: 3/5;\n\n    height: 100%;\n    width: 100%;\n}\n\n.add-option{\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n.global-inputs{\n    min-height: 50px;\n\n    width: 100%;\n    max-height: 100%;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n\n    gap: 10px;\n\n    overflow-x: auto;\n}\n.global-input{\n    width: fit-content;\n    background-color: white;\n\n    display: grid;\n    grid-template-columns: 1fr auto;\n    grid-template-rows: 1fr 1fr ;\n\n    gap: 10px;\n}\n.global-input input{\n    width: 100%;\n\n    grid-column : 1/3;\n}\n.global-input svg:hover{\n    cursor: pointer;\n}\n\n.form-holder .table-containers{\n    width: 100%;\n    height: 100%;\n}\n\n</style>"],"mappings":";AA0DA,OAAOA,QAAO,MAAO,sBAAqB;AAE1C,OAAOC,kBAAiB,MAAO,2BAA0B;AAEzD,OAAOC,gBAAe,MAAO,yDAAwD;AACrF,OAAOC,cAAa,MAAO,0DAAyD;AAEpF,SAASC,YAAW,QAAS,eAAc;AAC3C,eAAc;EACVC,IAAG,EAAI,aAAa;EACpBC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,MAAK,EAAI;QACLF,IAAG,EAAI,EAAC;QACRG,EAAC,EAAI,EAAE;QACPC,IAAG,EAAI,KAAI;QACXC,UAAS,EAAI;MACjB,CAAC;MACDC,SAAQ,EAAIP,YAAY,CAAC;IAC7B;EACJ,CAAC;EACDQ,UAAU,EAAE;IACRV,gBAAgB;IAChBC,cAAc;IACdF;EACJ,CAAC;EACDY,OAAM,EAAI;IACNC,YAAYA,CAAA,EAAE;MACV,IAAIC,QAAO,GAAI,gBAAgB;MAC/Bf,QAAQ,CAACgB,IAAI,CAACD,QAAQ,EACtB;QAAC,GAAG,IAAI,CAACR;MAAM,CAAC,EAChB,IAAI,EACJ,KAAK,EACJU,IAAI,CAAC,MAAI;QACN,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAACd,IAAG,EAAI,YAAW;UAAIe,MAAK,EAAI;YAAEC,EAAC,EAAI,IAAI,CAACd,MAAM,CAACc;UAAE;QAAC,CAAC;MAC7E,CAAC;IACL,CAAC;IACDC,aAAaA,CAAA,EAAE;MACX,IAAG,IAAI,CAACX,SAAS,CAACY,QAAO,IAAK,OAAO,EAAC;QAClC,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC;UAACd,IAAG,EAAI,YAAW;UAAImB,KAAI,EAAI;YAAEH,EAAC,EAAI,IAAI,CAACd,MAAM,CAACc;UAAG;UAAII,KAAI,EAAI;YAAEpB,IAAG,EAAI,IAAI,CAACE,MAAM,CAACF,IAAI;YAAEG,EAAC,EAAI,IAAI,CAACD,MAAM,CAACC,EAAE;YAAEC,IAAG,EAAI,IAAI,CAACF,MAAM,CAACE;UAAK;QAAC,CAAC;MACjK,CAAC,MAAI;QACD,IAAI,CAACiB,OAAO,CAACC,IAAI,CAAC,eAAe,EAAC;UAC9BC,KAAI,EAAI,IAAI;UACZC,WAAU,EAAI;QAClB,CAAC;MACL;IACJ;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAE;IACL,IAAG,IAAI,CAACC,MAAM,CAACN,KAAK,CAACpB,IAAI,EAAC;MACtB,IAAI,CAACE,MAAM,CAACF,IAAI,GAAE,IAAI,CAAC0B,MAAM,CAACN,KAAK,CAACpB,IAAG;IAC3C;IACA,IAAG,IAAI,CAAC0B,MAAM,CAACN,KAAK,CAAChB,IAAI,EAAC;MACtB,IAAI,CAACF,MAAM,CAACE,IAAI,GAAE,IAAI,CAACsB,MAAM,CAACN,KAAK,CAAChB,IAAG;IAC3C;IACA,IAAG,IAAI,CAACsB,MAAM,CAACN,KAAK,CAACjB,EAAE,EAAC;MACpB,IAAI,CAACD,MAAM,CAACC,EAAE,GAAE,IAAI,CAACuB,MAAM,CAACN,KAAK,CAACjB,EAAC;IACvC;IAEA,IAAIO,QAAO,GAAI,UAAU,GAAC,IAAI,CAACgB,MAAM,CAACX,MAAM,CAACC,EAAE;IAC/CrB,QAAQ,CAACgC,GAAG,CAACjB,QAAQ,EAAC,KAAK,EAC1BE,IAAI,CAAEV,MAAM,IAAG;MACZ,IAAI,CAACA,MAAK,GAAIA,MAAM;IACxB,CAAC;EACL;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}