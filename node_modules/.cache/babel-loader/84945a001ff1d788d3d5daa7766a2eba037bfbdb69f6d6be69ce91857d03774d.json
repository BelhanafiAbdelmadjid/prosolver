{"ast":null,"code":"import _defineProperty from \"/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport toolKit from \"@/main.js\";\nimport { reject } from \"core-js/fn/promise\";\nexport default class apiFetch {\n  static get(endpoint, emit) {\n    return new Promise(resolve => {\n      fetch(this.BASE_URL + endpoint, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status == 401) {\n          toolKit.router.push('/login');\n        }\n        response.json().then(data => {\n          if (emit) {\n            toolKit.emitter.emit(\"sidebar-error\", {\n              error: response.ok,\n              description: data.msg\n            });\n          }\n          if (response.ok) {\n            resolve(data);\n          } else {\n            reject(data);\n          }\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  }\n  static post(endpoint, payload, emit, throwError) {\n    return new Promise((resolve, reject) => {\n      fetch(this.BASE_URL + endpoint, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...payload\n        })\n      }).then(response => {\n        console.log(response.ok);\n        response.json().then(data => {\n          if (response.status == 401) {\n            toolKit.router.push('/login');\n          }\n          if (response.ok) {\n            console.log(response.ok);\n            resolve(data);\n          } else {\n            if (throwError) {\n              reject(data);\n            }\n          }\n          if (emit) {\n            toolKit.emitter.emit(\"sidebar-error\", {\n              error: !response.ok,\n              description: data.msg\n            });\n          }\n        });\n      });\n    });\n  }\n  static update(endpoint, payload, emit, throwError) {\n    return new Promise((resolve, reject) => {\n      fetch(this.BASE_URL + endpoint, {\n        method: \"PUT\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...payload\n        })\n      }).then(response => {\n        console.log(response.ok);\n        response.json().then(data => {\n          if (response.status == 401) {\n            toolKit.router.push('/login');\n          }\n          if (response.ok) {\n            console.log(response.ok);\n            resolve(data);\n          } else {\n            if (throwError) {\n              reject(data);\n            }\n          }\n          if (emit) {\n            toolKit.emitter.emit(\"sidebar-error\", {\n              error: !response.ok,\n              description: data.msg\n            });\n          }\n        });\n      });\n    });\n  }\n  static delete(endpoint, payload, emit, throwError) {\n    return new Promise((resolve, reject) => {\n      fetch(this.BASE_URL + endpoint, {\n        method: \"DELETE\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...payload\n        })\n      }).then(response => {\n        console.log(response.ok);\n        response.json().then(data => {\n          if (response.status == 401) {\n            toolKit.router.push('/login');\n          }\n          if (response.ok) {\n            console.log(response.ok);\n            resolve(data);\n          } else {\n            if (throwError) {\n              reject(data);\n            }\n          }\n          if (emit) {\n            toolKit.emitter.emit(\"sidebar-error\", {\n              error: !response.ok,\n              description: data.msg\n            });\n          }\n        });\n      });\n    });\n  }\n}\n\n// toolKit.router.beforeEach((to) => {\n//     if(to == \"supervision\" && toolKit.router.query.UAT == null && toolKit.router.query.Prod == null){\n//         toolKit.router.query.UAT = true;\n//     }\n//     return false\n//   })\n_defineProperty(apiFetch, \"BASE_URL\", \"http://localhost:5000/api\");","map":{"version":3,"names":["toolKit","reject","apiFetch","get","endpoint","emit","Promise","resolve","fetch","BASE_URL","method","credentials","headers","then","response","status","router","push","json","data","emitter","error","ok","description","msg","catch","err","console","log","post","payload","throwError","body","JSON","stringify","update","delete","_defineProperty"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/common/api.service.js"],"sourcesContent":["import toolKit from \"@/main.js\"\nimport { reject } from \"core-js/fn/promise\";\n\nexport default class apiFetch{\n    static BASE_URL = \"http://localhost:5000/api\";\n    static get(endpoint,emit){\n        return new Promise((resolve)=>{\n            fetch(this.BASE_URL+endpoint,{\n                method: \"GET\",\n                credentials: \"include\", \n                headers: {\n                    \"Content-Type\": \"application/json\",\n                }\n            })\n            .then((response)=>{\n                if(response.status == 401){\n                    toolKit.router.push('/login')\n                }\n                response.json()\n                .then((data)=>{\n                    if(emit){\n                        toolKit.emitter.emit(\"sidebar-error\",{\n                            error : response.ok,\n                            description : data.msg\n                        })\n                    }\n                    if(response.ok){\n                        resolve(data);\n                    }else{\n                        reject(data);\n                    }\n                })\n                \n            })\n            .catch((err)=>{\n                console.log(err);\n            })\n        })\n    }\n    static post(endpoint,payload,emit,throwError){\n        return new Promise((resolve,reject)=>{\n            fetch(this.BASE_URL+endpoint,{\n                method: \"POST\",\n                credentials: \"include\", \n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body : JSON.stringify({ \n                    ...payload\n                  })\n            })\n            .then((response)=>{\n                console.log(response.ok)\n                response.json()\n                .then((data)=>{\n                    if(response.status == 401){\n                        toolKit.router.push('/login')\n                    }\n                    if(response.ok){\n                        console.log(response.ok)\n                        resolve(data);\n                    }else{\n                        if(throwError){\n                            reject(data);\n                        }\n                    }\n                    if(emit){\n                        toolKit.emitter.emit(\"sidebar-error\",{\n                            error : !response.ok,\n                            description : data.msg\n                        })\n                    }\n                })\n                \n            })\n        })\n\n    }\n    static update(endpoint,payload,emit,throwError){\n        return new Promise((resolve,reject)=>{\n            fetch(this.BASE_URL+endpoint,{\n                method: \"PUT\",\n                credentials: \"include\", \n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body : JSON.stringify({ \n                    ...payload\n                  })\n            })\n            .then((response)=>{\n                console.log(response.ok)\n                response.json()\n                .then((data)=>{\n                    if(response.status == 401){\n                        toolKit.router.push('/login')\n                    }\n                    if(response.ok){\n                        console.log(response.ok)\n                        resolve(data);\n                    }else{\n                        if(throwError){\n                            reject(data);\n                        }\n                    }\n                    if(emit){\n                        toolKit.emitter.emit(\"sidebar-error\",{\n                            error : !response.ok,\n                            description : data.msg\n                        })\n                    }\n                })\n                \n            })\n        })\n\n    }\n    static delete(endpoint,payload,emit,throwError){\n        return new Promise((resolve,reject)=>{\n            fetch(this.BASE_URL+endpoint,{\n                method: \"DELETE\",\n                credentials: \"include\", \n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body : JSON.stringify({ \n                    ...payload\n                  })\n            })\n            .then((response)=>{\n                console.log(response.ok)\n                response.json()\n                .then((data)=>{\n                    if(response.status == 401){\n                        toolKit.router.push('/login')\n                    }\n                    if(response.ok){\n                        console.log(response.ok)\n                        resolve(data);\n                    }else{\n                        if(throwError){\n                            reject(data);\n                        }\n                    }\n                    if(emit){\n                        toolKit.emitter.emit(\"sidebar-error\",{\n                            error : !response.ok,\n                            description : data.msg\n                        })\n                    }\n                })\n                \n            })\n        })\n\n    }\n}\n\n\n\n// toolKit.router.beforeEach((to) => {\n//     if(to == \"supervision\" && toolKit.router.query.UAT == null && toolKit.router.query.Prod == null){\n//         toolKit.router.query.UAT = true;\n//     }\n//     return false\n//   })"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}