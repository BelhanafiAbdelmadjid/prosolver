{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      servers: null,\n      researchKeyFromQueryInput: null,\n      serversTemp: [],\n      minimise: true,\n      queryNotFound: false\n    };\n  },\n  components: {\n    queryNbarVue,\n    loadingBar,\n    tableComponentVue,\n    queryInputVue,\n    rectListDetailsVue,\n    SquarLoading,\n    rectListVue,\n    rectWithDetailsVue\n  },\n  watch: {\n    researchKeyFromQueryInput(v) {\n      v = v.trim().toUpperCase();\n      this.serversTemp = [];\n      for (let server of this.servers) {\n        if (server.name.toUpperCase().includes(v) || server.ip.toUpperCase().includes(v)) {\n          this.serversTemp.push(server);\n        }\n      }\n      if (this.serversTemp.length == 0) {\n        this.queryNotFound = true;\n      } else {\n        this.queryNotFound = false;\n      }\n    },\n    \"$route.query.UAT\": function () {\n      this.servers = null;\n      this.loadServers();\n    },\n    \"$route.query.Prod\": function () {\n      this.servers = null;\n      this.loadServers();\n    }\n  },\n  async beforeMount() {\n    if (this.$route.query.UAT) {\n      await Servers.getUATservers().then(res => {\n        this.servers = res;\n      });\n    }\n  },\n  methods: {\n    async loadServers() {\n      if (this.$route.query.UAT) {\n        await Servers.getUATservers().then(res => {\n          this.servers = res;\n        });\n      } else {\n        await Servers.getPRODServers().then(res => {\n          this.servers = res;\n        });\n      }\n    },\n    async OnOpeningDoRequest(server) {\n      server.containers = [];\n      await server.getContainers();\n    }\n  }\n};","map":{"version":3,"names":["data","servers","researchKeyFromQueryInput","serversTemp","minimise","queryNotFound","components","queryNbarVue","loadingBar","tableComponentVue","queryInputVue","rectListDetailsVue","SquarLoading","rectListVue","rectWithDetailsVue","watch","v","trim","toUpperCase","server","name","includes","ip","push","length","$route.query.UAT","loadServers","$route.query.Prod","beforeMount","$route","query","UAT","Servers","getUATservers","then","res","methods","getPRODServers","OnOpeningDoRequest","containers","getContainers"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/supervision.vue"],"sourcesContent":["<template>\n  \n</template>\n<script>\nexport default{\n    data(){\n        return{\n        servers : null,\n        researchKeyFromQueryInput : null,\n        serversTemp : [],\n        minimise : true,\n        queryNotFound : false,\n        \n    }\n    },\n    components : {\n        queryNbarVue,\n        loadingBar,\n        tableComponentVue,\n        queryInputVue,\n        rectListDetailsVue,\n        SquarLoading,\n        rectListVue,\n        rectWithDetailsVue,\n    },\n    watch : {\n        researchKeyFromQueryInput(v){\n            v = v.trim().toUpperCase()\n            this.serversTemp = []\n            for(let server of this.servers){\n                if( server.name.toUpperCase().includes(v) || server.ip.toUpperCase().includes(v)){\n                        this.serversTemp.push(server);\n                }             \n            }\n            if(this.serversTemp.length == 0){\n                this.queryNotFound = true;\n            }else{\n                this.queryNotFound = false;\n            }\n        },\n        \"$route.query.UAT\" : function(){\n            this.servers = null;\n            this.loadServers()\n        },\n        \"$route.query.Prod\" : function(){\n            this.servers = null;\n            this.loadServers()\n        }\n    },\n    async beforeMount(){\n        if(this.$route.query.UAT){\n\n            await Servers.getUATservers()\n            .then((res)=>{\n                this.servers = res;\n            })\n        }\n    },\n    methods : {\n        async loadServers(){\n            if(this.$route.query.UAT){\n                await Servers.getUATservers()\n                .then((res)=>{\n                    this.servers = res;\n                })\n            }else{\n                await Servers.getPRODServers()\n                .then((res)=>{\n                    this.servers = res;\n                })               \n            }\n        },\n        async OnOpeningDoRequest(server){\n            server.containers = [];\n            await server.getContainers()\n        }\n    }\n}\n</script>\n<style scoped>\n\n\n.table-line{\n    display:grid;\n    grid-template-columns : 1fr 1fr 1fr;\n    place-items:center;\n    width:100%;\n    box-sizing:border-box;\n    padding :5px;\n    cursor:pointer;\n    transition:all 0.15s;\n}\n\n.table-lines:hover{\n    background-color: rgb(228, 228, 228);\n    cursor: pointer;\n}\n.table-line-dark{\n    background-color: rgb(241, 241, 241);\n}\n.table-line-light{\n    background-color: white;\n}\n.table-head{\n    padding : 8px;\n    font-size:16px;\n    font-weight: 600;\n    background-color: #A100FFFF;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    box-sizing: border-box;\n    color:white;\n    width:100%;\n    display: flex;\n    justify-content : space-around;\n\n    place-items:center;\n    /*height : 40px;*/\n}\n\n.holder-superivsion{\n    display : grid;\n    grid-template-rows: auto auto 1fr;\n\n    height: 100vh;\n    place-content: top;\n    gap:20px;\n    padding : 20px;\n    box-sizing: border-box;\n}\n.Welcomeback{\n    height: auto;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: start;\n    gap : 5px;\n    padding : 20px;\n\n    border-radius: 20px;\n\n    background-size: 100% 100%;\n    background-position: 0px 0px;\n    background-image: linear-gradient(86deg, #A100FFFF 0%, #71C4FFFF 100%);\n\n    color:white;\n}\n.listing{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n}\n\n\n\n\n\n</style>"],"mappings":";AAIA,eAAc;EACVA,IAAIA,CAAA,EAAE;IACF,OAAM;MACNC,OAAM,EAAI,IAAI;MACdC,yBAAwB,EAAI,IAAI;MAChCC,WAAU,EAAI,EAAE;MAChBC,QAAO,EAAI,IAAI;MACfC,aAAY,EAAI;IAEpB;EACA,CAAC;EACDC,UAAS,EAAI;IACTC,YAAY;IACZC,UAAU;IACVC,iBAAiB;IACjBC,aAAa;IACbC,kBAAkB;IAClBC,YAAY;IACZC,WAAW;IACXC;EACJ,CAAC;EACDC,KAAI,EAAI;IACJb,yBAAyBA,CAACc,CAAC,EAAC;MACxBA,CAAA,GAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACzB,IAAI,CAACf,WAAU,GAAI,EAAC;MACpB,KAAI,IAAIgB,MAAK,IAAK,IAAI,CAAClB,OAAO,EAAC;QAC3B,IAAIkB,MAAM,CAACC,IAAI,CAACF,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACL,CAAC,KAAKG,MAAM,CAACG,EAAE,CAACJ,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACL,CAAC,CAAC,EAAC;UACzE,IAAI,CAACb,WAAW,CAACoB,IAAI,CAACJ,MAAM,CAAC;QACrC;MACJ;MACA,IAAG,IAAI,CAAChB,WAAW,CAACqB,MAAK,IAAK,CAAC,EAAC;QAC5B,IAAI,CAACnB,aAAY,GAAI,IAAI;MAC7B,CAAC,MAAI;QACD,IAAI,CAACA,aAAY,GAAI,KAAK;MAC9B;IACJ,CAAC;IACD,kBAAiB,EAAI,SAAAoB,CAAA,EAAU;MAC3B,IAAI,CAACxB,OAAM,GAAI,IAAI;MACnB,IAAI,CAACyB,WAAW,CAAC;IACrB,CAAC;IACD,mBAAkB,EAAI,SAAAC,CAAA,EAAU;MAC5B,IAAI,CAAC1B,OAAM,GAAI,IAAI;MACnB,IAAI,CAACyB,WAAW,CAAC;IACrB;EACJ,CAAC;EACD,MAAME,WAAWA,CAAA,EAAE;IACf,IAAG,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,GAAG,EAAC;MAErB,MAAMC,OAAO,CAACC,aAAa,CAAC,EAC3BC,IAAI,CAAEC,GAAG,IAAG;QACT,IAAI,CAAClC,OAAM,GAAIkC,GAAG;MACtB,CAAC;IACL;EACJ,CAAC;EACDC,OAAM,EAAI;IACN,MAAMV,WAAWA,CAAA,EAAE;MACf,IAAG,IAAI,CAACG,MAAM,CAACC,KAAK,CAACC,GAAG,EAAC;QACrB,MAAMC,OAAO,CAACC,aAAa,CAAC,EAC3BC,IAAI,CAAEC,GAAG,IAAG;UACT,IAAI,CAAClC,OAAM,GAAIkC,GAAG;QACtB,CAAC;MACL,CAAC,MAAI;QACD,MAAMH,OAAO,CAACK,cAAc,CAAC,EAC5BH,IAAI,CAAEC,GAAG,IAAG;UACT,IAAI,CAAClC,OAAM,GAAIkC,GAAG;QACtB,CAAC;MACL;IACJ,CAAC;IACD,MAAMG,kBAAkBA,CAACnB,MAAM,EAAC;MAC5BA,MAAM,CAACoB,UAAS,GAAI,EAAE;MACtB,MAAMpB,MAAM,CAACqB,aAAa,CAAC;IAC/B;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}