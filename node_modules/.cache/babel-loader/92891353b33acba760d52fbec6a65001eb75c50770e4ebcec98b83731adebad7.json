{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass, createSlots as _createSlots, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1c711979\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"holder-superivsion\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"Welcomeback\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Welcome back, adminprod42!ðŸ‘‹\"), /*#__PURE__*/_createElementVNode(\"p\", null, \"How things are going today?\")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0,\n  class: \"listing\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Name\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Ip\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Status\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  style: {\n    \"color\": \"gray\"\n  }\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"ip@\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  style: {\n    \"color\": \"gray\"\n  }\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"currently \", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"NAME\", -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"ID\", -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"PORT\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"STATUS\", -1 /* HOISTED */));\nconst _hoisted_15 = {\n  style: {\n    \"width\": \"100%\",\n    \"max-height\": \"20vh\"\n  }\n};\nconst _hoisted_16 = {\n  key: 1\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"There is no server added yet.\")], -1 /* HOISTED */));\nconst _hoisted_18 = [_hoisted_17];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_queryInputVue = _resolveComponent(\"queryInputVue\");\n  const _component_queryNbarVue = _resolveComponent(\"queryNbarVue\");\n  const _component_tableComponentVue = _resolveComponent(\"tableComponentVue\");\n  const _component_rectListVue = _resolveComponent(\"rectListVue\");\n  const _component_loadingBar = _resolveComponent(\"loadingBar\");\n  const _component_rectWithDetailsVue = _resolveComponent(\"rectWithDetailsVue\");\n  const _component_rectListDetailsVue = _resolveComponent(\"rectListDetailsVue\");\n  const _component_SquarLoading = _resolveComponent(\"SquarLoading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_queryNbarVue, null, {\n    Titre: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$route.query.UAT ? \"UAT\" : \"Prod\") + \"-Servers\", 1 /* TEXT */)]),\n    Query: _withCtx(() => [_createElementVNode(\"p\", {\n      style: {\n        \"cursor\": \"pointer\"\n      },\n      onClick: _cache[0] || (_cache[0] = $event => {\n        $data.minimise = true;\n      })\n    }, \"Minimise\"), _createElementVNode(\"p\", {\n      style: {\n        \"cursor\": \"pointer\"\n      },\n      onClick: _cache[1] || (_cache[1] = $event => {\n        $data.minimise = false;\n      })\n    }, \"Expend\"), _createVNode(_component_queryInputVue, null, {\n      default: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.researchKeyFromQueryInput = $event),\n        placeholder: \"Look for a server...\",\n        type: \"text\"\n      }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.researchKeyFromQueryInput]])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), $data.servers != null && $data.servers.length != 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [$data.minimise ? (_openBlock(), _createBlock(_component_tableComponentVue, {\n    key: 0\n  }, _createSlots({\n    tableHead: _withCtx(() => [_hoisted_4, _hoisted_5, _hoisted_6]),\n    _: 2 /* DYNAMIC */\n  }, [$data.researchKeyFromQueryInput == null || $data.researchKeyFromQueryInput == '' ? {\n    name: \"Tablelines\",\n    fn: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.servers, (server, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: _normalizeClass([\"table-line table-lines\", {\n          'table-line-dark': index % 2 != 0,\n          'table-line-light': !(index % 2 != 0)\n        }])\n      }, [_createElementVNode(\"p\", null, _toDisplayString(server.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(server.ip), 1 /* TEXT */), _createElementVNode(\"p\", {\n        style: _normalizeStyle({\n          color: server.status === 'UP' ? 'green' : 'red'\n        })\n      }, _toDisplayString(server.status), 5 /* TEXT, STYLE */)], 2 /* CLASS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    key: \"0\"\n  } : {\n    name: \"Tablelines\",\n    fn: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.serversTemp, (server, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: _normalizeClass([\"table-line table-lines\", {\n          'table-line-dark': index % 2 != 0,\n          'table-line-light': !(index % 2 != 0)\n        }])\n      }, [_createElementVNode(\"p\", null, _toDisplayString(server.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(server.ip), 1 /* TEXT */), _createElementVNode(\"p\", {\n        style: _normalizeStyle({\n          color: server.status === 'UP' ? 'green' : 'red'\n        })\n      }, _toDisplayString(server.status), 5 /* TEXT, STYLE */)], 2 /* CLASS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    key: \"1\"\n  }]), 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createBlock(_component_rectListDetailsVue, {\n    key: 1\n  }, _createSlots({\n    _: 2 /* DYNAMIC */\n  }, [$data.researchKeyFromQueryInput == null || $data.researchKeyFromQueryInput == '' ? {\n    name: \"rect-list\",\n    fn: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.servers, (server, index) => {\n      return _openBlock(), _createBlock(_component_rectWithDetailsVue, {\n        key: index,\n        style: {\n          \"margin-bottom\": \"10px\"\n        },\n        class: _normalizeClass({\n          'table-line-dark': index % 2 != 0\n        }),\n        onOpeningDoRequest: $event => $options.OnOpeningDoRequest(server)\n      }, {\n        mainBar: _withCtx(() => [_createVNode(_component_rectListVue, null, {\n          default: _withCtx(() => [_createElementVNode(\"h2\", null, _toDisplayString(server.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, [_hoisted_8, _createElementVNode(\"span\", null, [_createElementVNode(\"strong\", null, _toDisplayString(server.ip), 1 /* TEXT */)])]), _createElementVNode(\"p\", _hoisted_9, [_hoisted_10, _createElementVNode(\"span\", {\n            style: _normalizeStyle({\n              color: server.status === 'UP' ? 'green' : 'red'\n            })\n          }, [_createElementVNode(\"strong\", null, _toDisplayString(server.status), 1 /* TEXT */)], 4 /* STYLE */)])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        details: _withCtx(() => [_createVNode(_component_tableComponentVue, null, {\n          tableHead: _withCtx(() => [_hoisted_11, _hoisted_12, _hoisted_13, _hoisted_14]),\n          Tablelines: _withCtx(() => [server.containers.length == 0 ? (_openBlock(), _createBlock(_component_loadingBar, {\n            key: 0\n          })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(server.containers, (container, index) => {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: index,\n              class: _normalizeClass([\"table-line table-lines\", {\n                'table-line-dark': index % 2 != 0,\n                'table-line-light': !(index % 2 != 0)\n              }]),\n              style: {\n                \"display\": \"grid\",\n                \"grid-template-columns\": \"repeat(4,1fr)\"\n              }\n            }, [_createElementVNode(\"p\", null, _toDisplayString(container[\"NAMES\"]), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(container[\"CONTAINER ID\"]), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(container[\"PORTS\"]), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(container[\"STATUS\"]), 1 /* TEXT */)], 2 /* CLASS */);\n          }), 128 /* KEYED_FRAGMENT */))])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\", \"onOpeningDoRequest\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    key: \"0\"\n  } : {\n    name: \"rect-list\",\n    fn: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.serversTemp, (server, index) => {\n      return _openBlock(), _createBlock(_component_rectWithDetailsVue, {\n        key: index,\n        class: \"table-lines\",\n        style: {\n          \"margin-bottom\": \"10px\"\n        },\n        onOpeningDoRequest: $event => $options.OnOpeningDoRequest(server)\n      }, {\n        mainBar: _withCtx(() => [_createVNode(_component_rectListVue, null, {\n          default: _withCtx(() => [_createElementVNode(\"h2\", null, _toDisplayString(server.name), 1 /* TEXT */), _createElementVNode(\"p\", {\n            style: {\n              \"color\": \"gray\"\n            }\n          }, [_createElementVNode(\"span\", null, \"ip@\"), _createElementVNode(\"span\", null, [_createElementVNode(\"strong\", null, _toDisplayString(server.ip), 1 /* TEXT */)])]), _createElementVNode(\"p\", {\n            style: {\n              \"color\": \"gray\"\n            }\n          }, [_createElementVNode(\"span\", null, \"currently \"), _createElementVNode(\"span\", {\n            style: _normalizeStyle({\n              color: server.status == 'UP' ? 'green' : 'red'\n            })\n          }, [_createElementVNode(\"strong\", null, _toDisplayString(server.status), 1 /* TEXT */)], 4 /* STYLE */)])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        details: _withCtx(() => [_createVNode(_component_tableComponentVue, null, {\n          tableHead: _withCtx(() => [_createElementVNode(\"p\", null, \"NAME\"), _createElementVNode(\"p\", null, \"ID\"), _createElementVNode(\"p\", null, \"PORT\"), _createElementVNode(\"p\", null, \"STATUS\")]),\n          Tablelines: _withCtx(() => [server.containers.length == 0 ? (_openBlock(), _createBlock(_component_loadingBar, {\n            key: 0\n          })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", {\n            style: {\n              \"width\": \"100%\",\n              \"max-height\": \"20vh\"\n            }\n          }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(server.containers, (container, index) => {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: index,\n              class: _normalizeClass([\"table-line table-lines\", {\n                'table-line-dark': index % 2 != 0,\n                'table-line-light': !(index % 2 != 0)\n              }]),\n              style: {\n                \"display\": \"grid\",\n                \"grid-template-columns\": \"repeat(4,1fr)\"\n              }\n            }, [_createElementVNode(\"p\", null, _toDisplayString(container[\"NAMES\"]), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(container[\"CONTAINER ID\"]), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(container[\"PORTS\"]), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(container[\"STATUS\"]), 1 /* TEXT */)], 2 /* CLASS */);\n          }), 128 /* KEYED_FRAGMENT */))])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onOpeningDoRequest\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    key: \"1\"\n  }]), 1024 /* DYNAMIC_SLOTS */))])) : _createCommentVNode(\"v-if\", true), $data.servers != null && $data.servers.length == 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [..._hoisted_18])) : _createCommentVNode(\"v-if\", true), $data.servers == null ? (_openBlock(), _createBlock(_component_SquarLoading, {\n    key: 2\n  })) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","style","_hoisted_17","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_queryNbarVue","Titre","_withCtx","_createTextVNode","_toDisplayString","_ctx","$route","query","UAT","Query","onClick","_cache","$event","$data","minimise","_component_queryInputVue","default","researchKeyFromQueryInput","placeholder","type","_","servers","length","_hoisted_3","_createBlock","_component_tableComponentVue","_createSlots","tableHead","_hoisted_4","_hoisted_5","_hoisted_6","name","fn","_Fragment","_renderList","server","index","_normalizeClass","ip","_normalizeStyle","color","status","serversTemp","_component_rectListDetailsVue","_component_rectWithDetailsVue","onOpeningDoRequest","$options","OnOpeningDoRequest","mainBar","_component_rectListVue","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","details","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","Tablelines","containers","_component_loadingBar","_createCommentVNode","_hoisted_15","container","_hoisted_16","_hoisted_18","_component_SquarLoading"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/supervision.vue"],"sourcesContent":["<template>\n    <div class=\"holder-superivsion\">\n        <div class=\"Welcomeback\">\n            <h1>Welcome back, adminprod42!ðŸ‘‹</h1>\n            <p>How things are going today?</p>\n        </div>\n        <queryNbarVue  >\n                    <template v-slot:Titre >{{ $route.query.UAT ? \"UAT\" : \"Prod\" }}-Servers</template>\n                    <template v-slot:Query>\n                        <p style=\"cursor:pointer\" @click=\"minimise=true;\">Minimise</p>\n                        <p style=\"cursor:pointer\" @click=\"minimise=false;\">Expend</p>\n                        <queryInputVue>\n                            <input v-model=\"researchKeyFromQueryInput\" placeholder=\"Look for a server...\" type=\"text\" >\n                        </queryInputVue>\n                    </template>\n        </queryNbarVue>\n        <div v-if=\"servers!=null && servers.length != 0\" class=\"listing\" >\n            <tableComponentVue v-if=\"minimise\">\n                <template  v-slot:tableHead>\n                        <p>Name</p>\n                        <p>Ip</p>\n                        <p>Status</p>\n                </template>\n                <template v-if=\"(researchKeyFromQueryInput == null || researchKeyFromQueryInput == '')\" v-slot:Tablelines>\n                    <div v-for=\"(server,index) in servers\" :key=\"index\" class=\"table-line table-lines \" :class=\" {  'table-line-dark' : index%2 !=0 , 'table-line-light' : !(index%2 !=0)}\">\n                        <p>{{ server.name }}</p>\n                        <p>{{ server.ip }}</p>\n                        <p :style=\"{ color: server.status === 'UP' ? 'green' : 'red' }\">{{server.status}}</p>\n                    </div> \n                </template>\n                \n                <template v-else v-slot:Tablelines>\n                    <div v-for=\"(server,index) in serversTemp\" :key=\"index\"  class=\"table-line table-lines\" :class=\" {  'table-line-dark' : index%2 !=0 , 'table-line-light' : !(index%2 !=0) }\">\n                        <p>{{ server.name }}</p>\n                        <p>{{ server.ip }}</p>\n                        <p :style=\"{ color: server.status === 'UP' ? 'green' : 'red' }\" >{{server.status}}</p>\n                    </div> \n                </template>\n            </tableComponentVue>\n            <rectListDetailsVue v-else>\n                <template v-if=\"(researchKeyFromQueryInput == null || researchKeyFromQueryInput == '')\" v-slot:rect-list  >\n                    <rectWithDetailsVue \n                    v-for=\"(server,index) in servers\" \n                    :key=\"index\" \n                    style=\"margin-bottom:10px;\"  \n                    :class=\" {  'table-line-dark' : index%2 !=0 }\"\n                    @opening-do-request=\"OnOpeningDoRequest(server)\" >\n                        <template v-slot:mainBar >\n                            <rectListVue>\n                                <template v-slot>\n                                    <h2>{{ server.name }}</h2>\n                                    <p style=\"color : gray;\">\n                                        <span>ip@</span>\n                                        <span>\n                                            <strong>\n                                                {{ server.ip }}\n                                            </strong>\n                                        </span>\n                                    </p>\n                                    <p style=\"color : gray;\">\n                                        <span>currently </span>\n                                        <span :style=\"{ color: server.status === 'UP' ? 'green' : 'red' }\">\n                                            <strong>\n                                                {{ server.status }}\n                                            </strong>\n                                        </span>\n                                    </p>\n                                </template>\n                            </rectListVue>\n                        </template>\n                        <template v-slot:details>\n                            <tableComponentVue>\n                                <template   v-slot:tableHead >\n                                        <p>NAME</p>\n                                        <p>ID</p>\n                                        <p>PORT</p>\n                                        <p>STATUS</p>\n                                </template>\n                                <template v-slot:Tablelines  >\n                                    <loadingBar v-if=\"server.containers.length == 0\" ></loadingBar>\n                                   <div style=\"width:100%;max-height:20vh;\">\n                                        <div \n                                        v-for=\"container,index in server.containers\" \n                                        :key=\"index\"\n                                        class=\"table-line table-lines\" :class=\" {  'table-line-dark' : index%2 !=0 , 'table-line-light' : !(index%2 !=0) }\"\n                                        style=\"display:grid; grid-template-columns: repeat(4,1fr);\">\n                                            <p>{{container[\"NAMES\"]}}</p>\n                                            <p>{{container[\"CONTAINER ID\"]}}</p>\n                                            <p>{{container[\"PORTS\"]}}</p>\n                                            <p>{{container[\"STATUS\"]}}</p>\n                                        </div>\n                                   </div>\n                                </template>\n                            </tableComponentVue>\n                        </template>\n                    </rectWithDetailsVue>\n                \n                </template>\n                <template v-else v-slot:rect-list>\n                    <rectWithDetailsVue \n                    v-for=\"(server,index) in serversTemp\" \n                    :key=\"index\" \n                    class=\"table-lines\" \n                    style=\"margin-bottom:10px;\"\n                    @opening-do-request=\"OnOpeningDoRequest(server)\"  >\n                        <template v-slot:mainBar >\n                            <rectListVue>\n                                <template v-slot>\n                                    <h2>{{ server.name }}</h2>\n                                    <p style=\"color : gray;\">\n                                        <span>ip@</span>\n                                        <span>\n                                            <strong>\n                                                {{ server.ip }}\n                                            </strong>\n                                        </span>\n                                    </p>\n                                    <p style=\"color : gray;\">\n                                        <span>currently </span>\n                                        <span :style=\"{ color: server.status == 'UP' ? 'green' : 'red' }\">\n                                            <strong>\n                                                {{ server.status }}\n                                            </strong>\n                                        </span>\n                                    </p>\n                                </template>\n                            </rectListVue>\n                        </template>\n                        <template v-slot:details>\n                            <tableComponentVue>\n                                <template   v-slot:tableHead >\n                                        <p>NAME</p>\n                                        <p>ID</p>\n                                        <p>PORT</p>\n                                        <p>STATUS</p>\n                                </template>\n                                <template v-slot:Tablelines  >\n                                    <loadingBar v-if=\"server.containers.length == 0\" ></loadingBar>\n                                   <div style=\"width:100%;max-height:20vh;\">\n                                        <div \n                                        v-for=\"container,index in server.containers\" \n                                        :key=\"index\"\n                                        class=\"table-line table-lines\" :class=\" {  'table-line-dark' : index%2 !=0 , 'table-line-light' : !(index%2 !=0) }\"\n                                        style=\"display:grid; grid-template-columns: repeat(4,1fr);\">\n                                            <p>{{container[\"NAMES\"]}}</p>\n                                            <p>{{container[\"CONTAINER ID\"]}}</p>\n                                            <p>{{container[\"PORTS\"]}}</p>\n                                            <p>{{container[\"STATUS\"]}}</p>\n                                        </div>\n                                   </div>\n                                </template>\n                            </tableComponentVue>\n                        </template>\n                    </rectWithDetailsVue>\n                \n                </template>\n            </rectListDetailsVue>\n        </div>\n        <div v-if=\"servers!=null && servers.length == 0\">\n            <p><strong>There is no server added yet.</strong></p>\n        </div>\n        <SquarLoading v-if=\"servers==null\" ></SquarLoading>\n    </div>    \n</template>\n<script>\nimport queryInputVue from '@/components/UI/query-input.vue'\nimport tableComponentVue from '@/components/UI/table-query.vue'\nimport queryNbarVue from '@/components/UI/query-nbar.vue'\nimport rectListDetailsVue from '@/components/UI/query-component.vue'\nimport rectListVue from '@/components/UI/rect-list.vue'\nimport rectWithDetailsVue from '@/components/UI/rect-with-details.vue'\nimport loadingBar from \"@/components/Loadings/smallLoadingAnimation.vue\"\nimport SquarLoading from \"@/components/Loadings/bigLoadingAnimation.vue\"\nimport Servers from '@/store/models/servers'\nexport default{\n    data(){\n        return{\n        servers : null,\n        researchKeyFromQueryInput : null,\n        serversTemp : [],\n        minimise : true,\n        queryNotFound : false,\n        \n    }\n    },\n    components : {\n        queryNbarVue,\n        loadingBar,\n        tableComponentVue,\n        queryInputVue,\n        rectListDetailsVue,\n        SquarLoading,\n        rectListVue,\n        rectWithDetailsVue,\n    },\n    watch : {\n        researchKeyFromQueryInput(v){\n            v = v.trim().toUpperCase()\n            this.serversTemp = []\n            for(let server of this.servers){\n                if( server.name.toUpperCase().includes(v) || server.ip.toUpperCase().includes(v)){\n                        this.serversTemp.push(server);\n                }             \n            }\n            if(this.serversTemp.length == 0){\n                this.queryNotFound = true;\n            }else{\n                this.queryNotFound = false;\n            }\n        },\n        \"$route.query.UAT\" : function(){\n            this.servers = null;\n            this.loadServers()\n        },\n        \"$route.query.Prod\" : function(){\n            this.servers = null;\n            this.loadServers()\n        }\n    },\n    async beforeMount(){\n        if(this.$route.query.UAT){\n\n            await Servers.getUATservers()\n            .then((res)=>{\n                this.servers = res;\n            })\n        }\n    },\n    methods : {\n        async loadServers(){\n            if(this.$route.query.UAT){\n                await Servers.getUATservers()\n                .then((res)=>{\n                    this.servers = res;\n                })\n            }else{\n                await Servers.getPRODServers()\n                .then((res)=>{\n                    this.servers = res;\n                })               \n            }\n        },\n        async OnOpeningDoRequest(server){\n            server.containers = [];\n            await server.getContainers()\n        }\n    }\n}\n</script>\n<style scoped>\n\n\n.table-line{\n    display:grid;\n    grid-template-columns : 1fr 1fr 1fr;\n    place-items:center;\n    width:100%;\n    box-sizing:border-box;\n    padding :5px;\n    cursor:pointer;\n    transition:all 0.15s;\n}\n\n.table-lines:hover{\n    background-color: rgb(228, 228, 228);\n    cursor: pointer;\n}\n.table-line-dark{\n    background-color: rgb(241, 241, 241);\n}\n.table-line-light{\n    background-color: white;\n}\n.table-head{\n    padding : 8px;\n    font-size:16px;\n    font-weight: 600;\n    background-color: #A100FFFF;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    box-sizing: border-box;\n    color:white;\n    width:100%;\n    display: flex;\n    justify-content : space-around;\n\n    place-items:center;\n    /*height : 40px;*/\n}\n\n.holder-superivsion{\n    display : grid;\n    grid-template-rows: auto auto 1fr;\n\n    height: 100vh;\n    place-content: top;\n    gap:20px;\n    padding : 20px;\n    box-sizing: border-box;\n}\n.Welcomeback{\n    height: auto;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: start;\n    gap : 5px;\n    padding : 20px;\n\n    border-radius: 20px;\n\n    background-size: 100% 100%;\n    background-position: 0px 0px;\n    background-image: linear-gradient(86deg, #A100FFFF 0%, #71C4FFFF 100%);\n\n    color:white;\n}\n.listing{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n}\n\n\n\n\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}