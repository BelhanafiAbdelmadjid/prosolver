{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1569207a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"UAT\"\n}, \"UAT\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"PROD\"\n}, \"Prod\", -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_1, _hoisted_2];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, \"Name\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, \"Added by\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, \"Actions\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"server-name\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Actions\")], -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"input-holder\",\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"row\",\n    \"justify-content\": \"flex-start\",\n    \"align-items\": \"center\",\n    \"gap\": \"5px\"\n  }\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"type\"\n}, \"Input type: \", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"text\"\n}, \"Text\", -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"email\"\n}, \"Email\", -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"date\"\n}, \"Date\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"number\"\n}, \"Number\", -1 /* HOISTED */));\nconst _hoisted_15 = [_hoisted_11, _hoisted_12, _hoisted_13, _hoisted_14];\nconst _hoisted_16 = {\n  class: \"input-holder\",\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"row\",\n    \"justify-content\": \"flex-start\",\n    \"align-items\": \"center\",\n    \"gap\": \"5px\"\n  }\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Input label\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_tableExtension = _resolveComponent(\"tableExtension\");\n  const _component_buttonValidation = _resolveComponent(\"buttonValidation\");\n  const _component_popupDisplay = _resolveComponent(\"popupDisplay\");\n  const _component_interractionLayout = _resolveComponent(\"interractionLayout\");\n  return _openBlock(), _createBlock(_component_interractionLayout, {\n    forbiddenContainers: false\n  }, {\n    Header: _withCtx(() => [_createTextVNode(_toDisplayString($data.server.name + \" server\"), 1 /* TEXT */)]),\n    InputName: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      placeholder: \"Server name...\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.server.name = $event)\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.server.name]])]),\n    InputIp: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      placeholder: \"Server ip address...\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.server.ip = $event)\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.server.ip]])]),\n    InputType: _withCtx(() => [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.server.type = $event),\n      name: \"\",\n      id: \"\"\n    }, [..._hoisted_3], 512 /* NEED_PATCH */), [[_vModelSelect, $data.server.type]])]),\n    Containers: _withCtx(() => [_createVNode(_component_tableExtension, null, {\n      tableHeaders: _withCtx(() => [_hoisted_4, _hoisted_5, _hoisted_6]),\n      tableRows: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.server.containers, (container, index) => {\n        return _openBlock(), _createElementBlock(\"tr\", {\n          key: index\n        }, [_createElementVNode(\"td\", _hoisted_7, _toDisplayString(container.name), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"p\", null, _toDisplayString(container.addedBy), 1 /* TEXT */)]), _hoisted_8]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    })]),\n    Footer: _withCtx(() => [_createVNode(_component_buttonValidation, {\n      onClick: _cache[3] || (_cache[3] = $event => $options.updateServer()),\n      ok: true,\n      type: 'submit'\n    }, {\n      textButton: _withCtx(() => [_createTextVNode(\" Save changes \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_buttonValidation, {\n      onClick: _cache[4] || (_cache[4] = $event => _ctx.$router.back()),\n      danger: true,\n      type: 'submit'\n    }, {\n      textButton: _withCtx(() => [_createTextVNode(\" Cancel \")]),\n      _: 1 /* STABLE */\n    })]),\n    popUps: _withCtx(() => [$data.popUpBoolean ? (_openBlock(), _createBlock(_component_popupDisplay, {\n      key: 0,\n      onClosePopup: _cache[7] || (_cache[7] = $event => {\n        $data.popUpBoolean = false;\n      })\n    }, {\n      titel: _withCtx(() => [_createTextVNode(\"New global input\")]),\n      content: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"select\", {\n        name: \"type\",\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.inputPopUP.type = $event)\n      }, [..._hoisted_15], 512 /* NEED_PATCH */), [[_vModelSelect, $data.inputPopUP.type]])]), _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        placeholder: \"Input label...\",\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.inputPopUP.label = $event)\n      }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.inputPopUP.label]])]), _createVNode(_component_buttonValidation, {\n        ok: true,\n        onClick: _ctx.pushInput,\n        style: {\n          \"padding\": \"2px\",\n          \"width\": \"50%\",\n          \"align-self\": \"flex-end\"\n        }\n      }, {\n        textButton: _withCtx(() => [_createTextVNode(\" Add \")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","value","_hoisted_1","_hoisted_2","class","style","for","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_createBlock","_component_interractionLayout","forbiddenContainers","Header","_withCtx","_createTextVNode","_toDisplayString","$data","server","name","InputName","type","placeholder","_cache","$event","InputIp","ip","InputType","id","_hoisted_3","Containers","_createVNode","_component_tableExtension","tableHeaders","_hoisted_4","_hoisted_5","_hoisted_6","tableRows","_createElementBlock","_Fragment","_renderList","containers","container","index","key","_hoisted_7","addedBy","_hoisted_8","_","Footer","_component_buttonValidation","onClick","$options","updateServer","ok","textButton","_ctx","$router","back","danger","popUps","popUpBoolean","_component_popupDisplay","onClosePopup","titel","content","_hoisted_9","_hoisted_10","inputPopUP","_hoisted_15","_hoisted_16","_hoisted_17","label","pushInput","_createCommentVNode"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/servers/edit.vue"],"sourcesContent":["<template>\n\n    <interractionLayout :forbiddenContainers=\"false\" >\n\n        <template #Header>\n            {{ server.name + \" server\" }} \n        </template>\n        <template #InputName>\n            <input type=\"text\" placeholder=\"Server name...\" v-model=\"server.name\">\n        </template>\n        <template #InputIp>\n            <input type=\"text\" placeholder=\"Server ip address...\" v-model=\"server.ip\">\n        </template>\n        <template #InputType>\n            <select v-model=\"server.type\" name=\"\" id=\"\">\n                <option value=\"UAT\">UAT</option>\n                <option value=\"PROD\">Prod</option>\n            </select>\n        </template>\n        <template #Containers>\n            <tableExtension>\n                <template #tableHeaders>\n                    <td>Name</td>\n                    <td>Added by</td>\n                    <td>Actions</td>\n                </template>\n                <template #tableRows>\n                    <tr v-for=\"container, index in server.containers\" :key=\"index\">\n                        <td class=\"server-name\">{{ container.name }}</td>\n                        <td>\n                            <p>{{ container.addedBy }}</p>\n                        </td>\n                        <td>\n                            <p>Actions</p>\n                        </td>\n                    </tr>\n                </template>\n            </tableExtension>\n        </template>\n        <template #Footer>\n            <buttonValidation @click=\"updateServer()\" :ok=\"true\" :type=\"'submit'\">\n                <template #textButton>\n                    Save changes\n                </template>\n            </buttonValidation>\n            <buttonValidation @click=\"$router.back()\" :danger=\"true\" :type=\"'submit'\">\n                <template #textButton>\n                    Cancel\n                </template>\n            </buttonValidation>\n        </template>\n        <template #popUps>\n            <popupDisplay v-if=\"popUpBoolean\" @close-popup=\"popUpBoolean = false;\">\n                <template #titel>New global input</template>\n                <template #content>\n                    <div class=\"input-holder\"\n                        style=\"display: flex;flex-direction: row;justify-content: flex-start;align-items :center; gap:5px;\">\n                        <label for=\"type\">Input type: </label>\n                        <select name=\"type\" v-model=\"inputPopUP.type\">\n                            <option value=\"text\">Text</option>\n                            <option value=\"email\">Email</option>\n                            <option value=\"date\">Date</option>\n                            <option value=\"number\">Number</option>\n                        </select>\n                    </div>\n                    <div class=\"input-holder\"\n                        style=\"display: flex;flex-direction: row;justify-content: flex-start;align-items :center; gap:5px;\">\n                        <label for=\"\">Input label</label>\n                        <input type=\"text\" placeholder=\"Input label...\" v-model=\"inputPopUP.label\">\n                    </div>\n                    <buttonValidation :ok=\"true\" @click=\"pushInput\"\n                        style=\" padding: 2px;width: 50%;align-self: flex-end;\">\n                        <template #textButton>\n                            Add\n                        </template>\n                    </buttonValidation>\n                </template>\n            </popupDisplay>\n        </template>\n\n    </interractionLayout>\n\n\n</template>\n<script>\nimport apiFetch from \"@/common/api.service\"\n\nimport interractionLayout from \"./interraction-layout.vue\"\n\nimport buttonValidation from \"@/components/interraction/buttons/validation-button.vue\"\nimport popupDisplay from \"@/components/interraction/popups/popup-display.vue\"\nimport tableExtension from \"@/components/interraction/tables/table-withextension.vue\"\nexport default{\n    name : 'show-server',\n    data(){\n        return{\n            server : {\n                name : '' ,\n                ip : '',\n                type : \"UAT\" ,\n                containers : [],\n            },\n            oldServer : {\n                name : '' ,\n                ip : '',\n                type : \"UAT\" ,\n                containers : [],\n            },\n            popUpBoolean : false,\n            inputPopUP :  {\n                    label : \"\",\n                    type : \"\",\n                    id : null\n                }\n        }\n    },\n    components: {\n        buttonValidation,\n        tableExtension,\n        interractionLayout\n    },\n    methods : {\n        updateServer(){\n            this.keepUpdatedValue(this.oldServer,this.server,[\"id\"]);\n            console.log(\"sending\",this.server)\n\n            let endpoint = '/server/edit';\n            apiFetch.update(endpoint,\n            {...this.server},\n            true,\n            false)\n            .then(()=>{\n                this.$router.push({name : 'serverShow' , params : { id : this.server.id}})\n            })\n        },\n        keepUpdatedValue(oldObject, newObject, dontCheck) {\n            for (const prop of Object.getOwnPropertyNames(oldObject)) {\n                if (oldObject[prop] == newObject[prop] && !(dontCheck.includes(prop))) {\n                    newObject[prop] = null;\n                }\n            }\n        },\n    },\n    beforeMount(){\n        if(this.$route.query.name){\n            this.server.name= this.$route.query.name\n        }\n        if(this.$route.query.type){\n            this.server.type= this.$route.query.type\n        }\n        if(this.$route.query.ip){\n            this.server.ip= this.$route.query.ip\n        }\n\n        let endpoint = \"/server/\"+this.$route.params.id;\n        apiFetch.get(endpoint,false)\n        .then((server)=>{\n            this.server = server;\n            this.oldServer =Object.assign({}, this.server); \n        })\n    }\n}\n</script>\n<style scoped>\n\n\n.form-holder form{\n    grid-template-columns: 1fr 1fr;\n\n\n}\n.form-holder form .input-name {\n    grid-area: 1/1/2/2;\n}\n.form-holder form .input-name input, .form-holder form .input-type select{\n    width: 100%;\n}\n.form-holder form .input-ip {\n    grid-area: 2/1/3/3;\n}\n.form-holder form .input-type {\n    grid-area: 1/2/2/3;\n}\n.form-holder .containers{\n\n    grid-column: 1/3 ;\n    grid-row: 3/5;\n\n    height: 100%;\n    width: 100%;\n}\n\n.add-option{\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n.global-inputs{\n    min-height: 50px;\n\n    width: 100%;\n    max-height: 100%;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n\n    gap: 10px;\n\n    overflow-x: auto;\n}\n.global-input{\n    width: fit-content;\n    background-color: white;\n\n    display: grid;\n    grid-template-columns: 1fr auto;\n    grid-template-rows: 1fr 1fr ;\n\n    gap: 10px;\n}\n.global-input input{\n    width: 100%;\n\n    grid-column : 1/3;\n}\n.global-input svg:hover{\n    cursor: pointer;\n}\n\n.form-holder .table-containers{\n    width: 100%;\n    height: 100%;\n}\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}