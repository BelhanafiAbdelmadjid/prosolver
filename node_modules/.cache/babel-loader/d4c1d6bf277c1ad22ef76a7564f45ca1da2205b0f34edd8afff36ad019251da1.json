{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1c711979\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"holders hoder-supervision\"\n};\nconst _hoisted_2 = {\n  class: \"Welcomeback colorfull-gradient-1\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"How things are going today?\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"server-name\"\n};\nconst _hoisted_5 = {\n  class: \"holder-status\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_queryNavbar = _resolveComponent(\"queryNavbar\");\n  const _component_tableExtension = _resolveComponent(\"tableExtension\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", null, \"Welcome back, \" + _toDisplayString($data.AuthStore.username) + \"!ðŸ‘‹\", 1 /* TEXT */), _hoisted_3]), _createVNode(_component_queryNavbar, {\n    onInputChanged: $options.onInputChanged,\n    theme: 'white'\n  }, {\n    Title: _withCtx(() => [_createTextVNode(\" Servers \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onInputChanged\"]), _createVNode(_component_tableExtension, null, {\n    tableRows: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.servers, server => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: server.id\n      }, [_createElementVNode(\"td\", _hoisted_4, _toDisplayString(server.name), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"p\", null, _toDisplayString(server.ip), 1 /* TEXT */)]), _createElementVNode(\"td\", null, [_createElementVNode(\"p\", _hoisted_5, [_createElementVNode(\"span\", {\n        class: _normalizeClass([{\n          'status-dot-active': server.status == 'Active',\n          'status-dot-down': server.status == 'Down'\n        }, \"status-dot\"])\n      }, null, 2 /* CLASS */), _createElementVNode(\"span\", null, _toDisplayString(server.status), 1 /* TEXT */)])])]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$data","AuthStore","username","_hoisted_3","_createVNode","_component_queryNavbar","onInputChanged","$options","theme","Title","_withCtx","_createTextVNode","_","_component_tableExtension","tableRows","_Fragment","_renderList","servers","server","key","id","_hoisted_4","name","ip","_hoisted_5","_normalizeClass","status"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/supervision.vue"],"sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                                  JSON DATA                                 */\n/* -------------------------------------------------------------------------- */\n/*  \n\nservers : Array\n[\n{\n    id : X , name : \"test\" , ip : \"@ip\" , status : \"Active/Down\"\n}\n]\n\n/* -------------------------------------------------------------------------- */\n/*                                    TO DO                                   */\n/* -------------------------------------------------------------------------- */\n\nMethods : getServers , getServersWithNameLike\n\n*/\n<template>\n  <div class=\"holders hoder-supervision\" >\n    <div class=\"Welcomeback colorfull-gradient-1\">\n        <h1>Welcome back, {{AuthStore.username}}!ðŸ‘‹</h1>\n        <p>How things are going today?</p>\n    </div>\n    <queryNavbar @input-changed=\"onInputChanged\" :theme=\"'white'\" >\n      <template #Title>\n        Servers\n      </template>\n    </queryNavbar>\n    <tableExtension>\n      <template #tableRows >\n            <tr  v-for=\"server in servers\" :key=\"server.id\"  >\n                <td class=\"server-name\">{{ server.name }}</td>\n                <td>\n                    <p>{{ server.ip }}</p>\n                </td>\n\n                <td>\n                    <p class=\"holder-status\">\n                        <span :class=\"{ 'status-dot-active' : server.status == 'Active','status-dot-down' : server.status == 'Down'  }\"  class=\"status-dot\" ></span>\n                        <span>{{ server.status }}</span>\n                    </p>\n                </td>\n            </tr>\n      </template>\n    </tableExtension>\n  </div>\n</template>\n<script>\nimport { UseAuthStore } from \"@/store/store.js\"\nimport queryNavbar from \"@/components/interraction/query/query-navbar.vue\"\nimport tableExtension from \"@/components/interraction/tables/table-withextension.vue\"\nexport default{\n    name : 'supervision-view',\n    data(){\n        return{\n          AuthStore : UseAuthStore(),\n          servers : []\n        } \n    },\n    components : {\n      queryNavbar,\n      tableExtension\n    },\n    methods : {\n      getServers(){\n            this.servers = [\n                {\n                    id : 5,\n                    name : \"Onboarding01-uat\",\n                    ip : \"192.168.1.104\",\n                    status : 'Active'\n                },\n                {\n                    id : 15,\n                    name : \"Onboarding02-uat\",\n                    ip : \"192.168.1.107\",\n                    status : 'Down'\n                },\n            ]\n      },\n      onInputChanged(inputValue){\n        this.getServersWithNameLike(inputValue)\n      },\n      getServersWithNameLike(NameLike){\n        console.log(NameLike)\n        //fetch here after\n      }\n    },\n    beforeMount(){\n        this.getServers();\n    }\n}\n</script>\n<style scoped>\n\n.hoder-supervision{\n  height: 100%;\n  width: 100%;\n\n  display: grid;\n  grid-template-rows: 120px  50px  1fr;\n}\n.Welcomeback{\n  height: auto;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  gap : 5px;\n  padding : var(--medieum-padding);\n  box-sizing: border-box;\n  border-radius: var(--medieum-border-radius);\n\n\n\n  color:white;\n}\n\n\n</style>"],"mappings":";;;EAoBOA,KAAK,EAAC;AAA2B;;EAC/BA,KAAK,EAAC;AAAkC;gEAEzCC,mBAAA,CAAkC,WAA/B,6BAA2B;;EAUlBD,KAAK,EAAC;AAAa;;EAMhBA,KAAK,EAAC;AAAe;;;;uBAnB1CE,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJF,mBAAA,CAGM,OAHNG,UAGM,GAFFH,mBAAA,CAAgD,YAA5C,gBAAc,GAAAI,gBAAA,CAAEC,KAAA,CAAAC,SAAS,CAACC,QAAQ,IAAE,KAAG,iBAC3CC,UAAkC,C,GAEtCC,YAAA,CAIcC,sBAAA;IAJAC,cAAa,EAAEC,QAAA,CAAAD,cAAc;IAAGE,KAAK,EAAE;;IACxCC,KAAK,EAAAC,QAAA,CAAC,MAEjB,CA5BNC,gBAAA,CA0BuB,WAEjB,E;IA5BNC,CAAA;yCA8BIR,YAAA,CAgBiBS,yBAAA;IAfJC,SAAS,EAAAJ,QAAA,CACT,MAAyB,E,kBAA9Bd,mBAAA,CAYKmB,SAAA,QA5CjBC,WAAA,CAgCkChB,KAAA,CAAAiB,OAAO,EAAjBC,MAAM;2BAAlBtB,mBAAA,CAYK;QAZ2BuB,GAAG,EAAED,MAAM,CAACE;UACxCzB,mBAAA,CAA8C,MAA9C0B,UAA8C,EAAAtB,gBAAA,CAAnBmB,MAAM,CAACI,IAAI,kBACtC3B,mBAAA,CAEK,aADDA,mBAAA,CAAsB,WAAAI,gBAAA,CAAhBmB,MAAM,CAACK,EAAE,iB,GAGnB5B,mBAAA,CAKK,aAJDA,mBAAA,CAGI,KAHJ6B,UAGI,GAFA7B,mBAAA,CAA4I;QAArID,KAAK,EAxCpC+B,eAAA;UAAA,qBAwC8DP,MAAM,CAACQ,MAAM;UAAA,mBAAiCR,MAAM,CAACQ,MAAM;QAAA,GAAsB,YAAY;+BACnI/B,mBAAA,CAAgC,cAAAI,gBAAA,CAAvBmB,MAAM,CAACQ,MAAM,iB;;IAzC9Cd,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}