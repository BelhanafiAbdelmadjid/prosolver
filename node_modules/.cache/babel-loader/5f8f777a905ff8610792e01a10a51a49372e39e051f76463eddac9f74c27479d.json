{"ast":null,"code":"import apiFetch from \"@/common/api.service\";\nimport interraction from \"./interraction-script.vue\";\nimport buttonValidation from \"@/components/interraction/buttons/validation-button.vue\";\nexport default {\n  name: 'script-create',\n  components: {\n    interraction,\n    buttonValidation\n  },\n  data() {\n    return {\n      step: {\n        name: '',\n        server: {\n          id: null\n        },\n        container: {\n          id: null\n        },\n        script: {\n          id: null\n        },\n        inputs: []\n      },\n      oldStep: {},\n      req: {\n        scripts: [],\n        servers: []\n      },\n      selectContainer: false,\n      containersSelect: []\n    };\n  },\n  watch: {\n    'step.server.id'() {\n      try {\n        let server = this.req.servers.filter(server => server.id === this.step.server.id);\n        this.containersSelect = server[0].containers;\n      } catch {\n        return;\n      }\n    },\n    selectContainer(newV, oldV) {\n      if (oldV == false && newV == true) {\n        if (this.step.server == null) {\n          this.emitter.emit(\"sidebar-error\", {\n            error: true,\n            description: 'Please select a server first.'\n          });\n          this.selectContainer = false;\n        } else if (this.step.container == null) {\n          console.log(\"first auto select\", this.step.server);\n          this.containersSelect = this.step.server.containers;\n        }\n      } else if (oldV == true && newV == false) {\n        this.containersSelect = [];\n      }\n    },\n    'step.script.id'() {\n      if (this.script) {\n        let endpoint = '/incident/' + this.$route.params.id + '/script/' + this.step.script.id + '/join';\n        apiFetch.get(endpoint, false).then(inputs => {\n          this.step.inputs = inputs;\n        });\n      }\n    }\n  },\n  beforeMount() {\n    // incident/3/step/create\n\n    let endpoint = '/incident/' + this.$route.params.id + '/step/' + this.$route.params.stepID;\n    apiFetch.get(endpoint, false).then(req => {\n      this.step = req;\n      console.log(\"recived data\", req);\n      this.oldStep = Object.assign({}, this.step);\n    });\n    let endpoint2 = '/incident/' + this.$route.params.id + '/step/create';\n    apiFetch.get(endpoint2, false).then(req => {\n      this.req = req;\n    });\n  },\n  methods: {\n    updateStep() {\n      this.keepUpdatedValue(this.oldStep, this.step, [\"id\", \"inputs\"]);\n      console.log(\"here is the step\", this.step);\n      let endpoint = '/incident/step/update';\n      apiFetch.update(endpoint, {\n        step: this.step.id,\n        server: this.step.server,\n        script: this.step.script,\n        container: this.step.container,\n        name: this.step.name,\n        inputs: this.step.inputs,\n        onServer: this.step.container != null ? true : false\n      }, true, false).then(() => {\n        this.$router.back();\n      });\n    },\n    keepUpdatedValue(oldObject, newObject, dontCheck) {\n      for (const prop of Object.getOwnPropertyNames(oldObject)) {\n        if (oldObject[prop] == newObject[prop] && !dontCheck.includes(prop)) {\n          newObject[prop] = null;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiFetch","interraction","buttonValidation","name","components","data","step","server","id","container","script","inputs","oldStep","req","scripts","servers","selectContainer","containersSelect","watch","step.server.id","filter","containers","newV","oldV","emitter","emit","error","description","console","log","step.script.id","endpoint","$route","params","get","then","beforeMount","stepID","Object","assign","endpoint2","methods","updateStep","keepUpdatedValue","update","onServer","$router","back","oldObject","newObject","dontCheck","prop","getOwnPropertyNames","includes"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/steps/edit.vue"],"sourcesContent":["<template>\n    <interraction :forbiddenInputs=\"false\" >\n        <template #ScriptHeader >Edit step {{ step.name }}</template>\n\n\n        <template #InputName >\n            <input  v-model=\"step.name\"  type=\"text\">\n        </template>\n        <template #InputScript >\n            <select  v-model=\"step.script\" >\n                <option v-for=\"script in req.scripts\" :key=\"script.id\" :value=\"script.id\">{{ script.name+'.'+script.language }}</option>\n            </select>\n        </template>\n        <template #InputServer >\n            <select  v-model=\"step.server\"  >\n                <option v-for=\"server in req.servers\" :key=\"server.id\" :value=\"server.id\">{{ server.name }}</option>\n            </select>\n        </template>\n        <template #InputContainerChekbox >\n            <input type=\"checkbox\" v-model=\"selectContainer\" name=\"\" id=\"\">\n        </template>\n        <template v-if=\"selectContainer\" #InputContainer >\n            <select   v-model=\"step.container\"  >\n                <option v-for=\"container in containersSelect\" :key=\"container.id\" :value=\"container.id\">{{ container.name}}</option>\n            </select>\n        </template>\n\n\n\n        <template #GlobalInputListing >\n            <div style=\"height: 100%;width: 100%;\" >\n                <div class=\"input-config-holder\" v-for=\"input,index in step.inputs\" :key=\"index\" >\n                    <div class=\"input-config-line\"   v-if=\"input.fromIncident\" >\n                        <p>Make <strong> {{ input.label +' ' }}</strong> input global.</p>\n                        <input type=\"checkbox\" v-model=\"input.fromIncident\">\n                    </div>\n                    <div class=\"input-config-line\"  v-else >\n                        <p>Local <strong> {{ input.label +' ' }} </strong> input.</p>\n                    </div>\n                    \n                </div>\n            </div>\n        </template>\n        <template #Footer >\n            <buttonValidation   @click=\"updateStep()\" :ok=\"true\" :type=\"'submit'\">\n                <template #textButton>\n                    Save changes\n                </template>\n            </buttonValidation>\n            <buttonValidation   @click=\"$router.back()\" :danger=\"true\" :type=\"'submit'\">\n                <template #textButton>\n                    Cancel\n                </template>\n            </buttonValidation>\n\n        </template> \n\n        <template #popUps >\n            \n        </template>\n\n    </interraction>\n</template>\n<script>\nimport apiFetch from \"@/common/api.service\"\nimport interraction from \"./interraction-script.vue\"\nimport buttonValidation from \"@/components/interraction/buttons/validation-button.vue\"\nexport default{\n    name : 'script-create',\n    components : {\n        interraction,\n        buttonValidation\n    },\n    data(){\n        return{\n            step : {\n                name : '',\n                server : {\n                    id : null\n                } ,\n                container : {\n                    id : null\n                },\n                script : {\n                    id : null\n                },\n                inputs : []\n            },\n            oldStep :{},\n            req : {\n                scripts : [],\n                servers : [],\n            },\n            selectContainer : false,\n            containersSelect : []\n        }\n    },\n    watch : {\n        'step.server.id'(){\n            try{\n                let server = this.req.servers.filter( server => server.id === this.step.server.id );\n                this.containersSelect =  server[0].containers;\n            }catch{\n                return;\n            }\n            \n        },\n        selectContainer(newV,oldV){\n            if(oldV == false && newV == true){\n                if(this.step.server == null){\n                    this.emitter.emit(\"sidebar-error\",{error : true , description : 'Please select a server first.'})\n                    this.selectContainer = false;\n                }else if(this.step.container == null ){\n                    console.log(\"first auto select\",this.step.server)\n                    this.containersSelect = this.step.server.containers;\n                }\n            }else if(oldV == true && newV == false){\n                this.containersSelect = [];\n            }\n        },\n        'step.script.id'(){\n            if(this.script){\n                let endpoint = '/incident/' + this.$route.params.id + '/script/' + this.step.script.id + '/join'\n                apiFetch.get(endpoint, false)\n                    .then((inputs) => {\n                        this.step.inputs = inputs\n\n                    })\n            }\n        },\n\n    },\n    beforeMount(){\n        // incident/3/step/create\n\n        let endpoint = '/incident/'+ this.$route.params.id+'/step/'+this.$route.params.stepID\n        apiFetch.get(endpoint,false)\n        .then((req)=>{\n            this.step= req;\n            console.log(\"recived data\",req)\n            this.oldStep =Object.assign({}, this.step); \n        })\n\n        let endpoint2 = '/incident/'+ this.$route.params.id+'/step/create'\n        apiFetch.get(endpoint2,false)\n        .then((req)=>{\n            this.req =req;\n        })\n    },\n    methods : {\n        updateStep(){\n\n            this.keepUpdatedValue(this.oldStep,this.step,[\"id\",\"inputs\"]);\n            console.log(\"here is the step\",this.step)\n            let endpoint = '/incident/step/update';\n            apiFetch.update(endpoint,{\n                step : this.step.id,\n                server : this.step.server,\n                script : this.step.script,\n                container : this.step.container,\n                name : this.step.name,\n                inputs : this.step.inputs,\n                onServer : this.step.container != null ? true : false\n            },\n            true,\n            false)\n            .then(()=>{\n                this.$router.back()\n            })\n\n        },\n        keepUpdatedValue(oldObject, newObject, dontCheck) {\n            for (const prop of Object.getOwnPropertyNames(oldObject)) {\n                if (oldObject[prop] == newObject[prop] && !(dontCheck.includes(prop))) {\n                    newObject[prop] = null;\n                }\n            }\n        },\n    }\n}\n</script>\n<style scoped>\n.input-config-holder{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n\n    gap: 5px;\n    box-sizing: border-box;\n\n    overflow-y: auto;\n\n    width: 100%;\n\n\n}\n.input-config-line{\n\n    width: 100%;\n\n    padding: var(--extra-small-padding);\n    box-sizing: border-box;\n\n    border: solid 1px black;\n    border-radius: 3px;\n\n    background-color: white;\n\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    gap:3px;\n\n    margin-top: 5px;\n}\n.input-config-line:hover{\n    border: solid 1px var(--warm-color-1);\n}\n\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}