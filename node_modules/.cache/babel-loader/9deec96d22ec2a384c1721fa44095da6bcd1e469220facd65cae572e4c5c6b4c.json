{"ast":null,"code":"export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return null;\n}","map":{"version":3,"names":[],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/supervision.vue"],"sourcesContent":["<template>\n  \n</template>\n<script>\nexport default{\n    data(){\n        return{\n        \n    }\n    },\n    components : {\n        queryNbarVue,\n        loadingBar,\n        tableComponentVue,\n        queryInputVue,\n        rectListDetailsVue,\n        SquarLoading,\n        rectListVue,\n        rectWithDetailsVue,\n    },\n    watch : {\n        researchKeyFromQueryInput(v){\n            v = v.trim().toUpperCase()\n            this.serversTemp = []\n            for(let server of this.servers){\n                if( server.name.toUpperCase().includes(v) || server.ip.toUpperCase().includes(v)){\n                        this.serversTemp.push(server);\n                }             \n            }\n            if(this.serversTemp.length == 0){\n                this.queryNotFound = true;\n            }else{\n                this.queryNotFound = false;\n            }\n        },\n        \"$route.query.UAT\" : function(){\n            this.servers = null;\n            this.loadServers()\n        },\n        \"$route.query.Prod\" : function(){\n            this.servers = null;\n            this.loadServers()\n        }\n    },\n    async beforeMount(){\n        if(this.$route.query.UAT){\n\n            await Servers.getUATservers()\n            .then((res)=>{\n                this.servers = res;\n            })\n        }\n    },\n    methods : {\n        async loadServers(){\n            if(this.$route.query.UAT){\n                await Servers.getUATservers()\n                .then((res)=>{\n                    this.servers = res;\n                })\n            }else{\n                await Servers.getPRODServers()\n                .then((res)=>{\n                    this.servers = res;\n                })               \n            }\n        },\n        async OnOpeningDoRequest(server){\n            server.containers = [];\n            await server.getContainers()\n        }\n    }\n}\n</script>\n<style scoped>\n\n\n.table-line{\n    display:grid;\n    grid-template-columns : 1fr 1fr 1fr;\n    place-items:center;\n    width:100%;\n    box-sizing:border-box;\n    padding :5px;\n    cursor:pointer;\n    transition:all 0.15s;\n}\n\n.table-lines:hover{\n    background-color: rgb(228, 228, 228);\n    cursor: pointer;\n}\n.table-line-dark{\n    background-color: rgb(241, 241, 241);\n}\n.table-line-light{\n    background-color: white;\n}\n.table-head{\n    padding : 8px;\n    font-size:16px;\n    font-weight: 600;\n    background-color: #A100FFFF;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    box-sizing: border-box;\n    color:white;\n    width:100%;\n    display: flex;\n    justify-content : space-around;\n\n    place-items:center;\n    /*height : 40px;*/\n}\n\n.holder-superivsion{\n    display : grid;\n    grid-template-rows: auto auto 1fr;\n\n    height: 100vh;\n    place-content: top;\n    gap:20px;\n    padding : 20px;\n    box-sizing: border-box;\n}\n.Welcomeback{\n    height: auto;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: start;\n    gap : 5px;\n    padding : 20px;\n\n    border-radius: 20px;\n\n    background-size: 100% 100%;\n    background-position: 0px 0px;\n    background-image: linear-gradient(86deg, #A100FFFF 0%, #71C4FFFF 100%);\n\n    color:white;\n}\n.listing{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n}\n\n\n\n\n\n</style>"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}