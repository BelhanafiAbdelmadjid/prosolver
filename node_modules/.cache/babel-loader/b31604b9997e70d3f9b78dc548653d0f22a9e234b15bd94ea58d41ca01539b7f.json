{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_queryNavbar = _resolveComponent(\"queryNavbar\");\n  return _openBlock(), _createBlock(_component_queryNavbar, {\n    onInputChanged: $options.onInputChanged,\n    theme: 'white'\n  }, {\n    Title: _withCtx(() => [_createTextVNode(\" Incidents \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onInputChanged\"]);\n}","map":{"version":3,"names":["_createBlock","_component_queryNavbar","onInputChanged","$options","theme","Title","_withCtx","_createTextVNode","_"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/Natixis/new-banxy-rest-api/frontend/src/views/incidents/index.vue"],"sourcesContent":["<template>\n    <queryNavbar @input-changed=\"onInputChanged\" :theme=\"'white'\" >\n        <template #Title>\n            Incidents\n        </template>\n    </queryNavbar>\n</template>\n<script>\nimport queryNavbar from \"@/components/navbars/interraction/query/query-navbar.vue\"\nexport default{\n    name : 'incidents-index',\n    data(){\n        return{\n\n        }\n    },\n    components : {\n        queryNavbar\n    },\n    methods : {\n        onInputChanged(input){\n            console.log(input)\n        }\n    }\n}\n</script>\n<style scoped >\n\n</style>"],"mappings":";;;uBACIA,YAAA,CAIcC,sBAAA;IAJAC,cAAa,EAAEC,QAAA,CAAAD,cAAc;IAAGE,KAAK,EAAE;;IACtCC,KAAK,EAAAC,QAAA,CAAC,MAEjB,CAJRC,gBAAA,CAEyB,aAEjB,E;IAJRC,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}